[{"/Users/nikhil/Desktop/MusicStreamingCalculator/src/index.js":"1","/Users/nikhil/Desktop/MusicStreamingCalculator/src/App.js":"2","/Users/nikhil/Desktop/MusicStreamingCalculator/src/reportWebVitals.js":"3","/Users/nikhil/Desktop/MusicStreamingCalculator/src/TestCompPage.js":"4","/Users/nikhil/Desktop/MusicStreamingCalculator/src/CalcPage.js":"5","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/SmallText.js":"6","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/SwitchButton.js":"7","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/DspButton.js":"8","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/NumberInput.js":"9","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/ButtonGroup.js":"10","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/TextButton.js":"11","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/TitleText.js":"12"},{"size":500,"mtime":1607082597708,"results":"13","hashOfConfig":"14"},{"size":250,"mtime":1607292024331,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607082597709,"results":"16","hashOfConfig":"14"},{"size":6858,"mtime":1607292281534,"results":"17","hashOfConfig":"14"},{"size":19947,"mtime":1607277517452,"results":"18","hashOfConfig":"14"},{"size":275,"mtime":1607085472465,"results":"19","hashOfConfig":"14"},{"size":1076,"mtime":1607170386488,"results":"20","hashOfConfig":"14"},{"size":818,"mtime":1607276365763,"results":"21","hashOfConfig":"14"},{"size":1640,"mtime":1607177272449,"results":"22","hashOfConfig":"14"},{"size":1005,"mtime":1607292134582,"results":"23","hashOfConfig":"14"},{"size":452,"mtime":1607169689019,"results":"24","hashOfConfig":"14"},{"size":232,"mtime":1607074758640,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xbyk7m",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/nikhil/Desktop/MusicStreamingCalculator/src/index.js",[],["55","56"],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/App.js",["57"],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/reportWebVitals.js",[],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/TestCompPage.js",["58","59"],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/CalcPage.js",["60","61","62"],"import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nimport TextButton from './components/TextButton.js';\n\nconst ce = React.createElement;\n\n\n//average / approx payout for publishing for stream\nconst avgPubPayout = 0.0007174565191\n\n        //handling dsps\n        let spotify = {\n          id: 0,\n          name: \"Spotify\",\n          payoutPerStream: 0.00331,\n          marketShareStreams: .2922,\n            marketShareDollars: .4893,\n            includeInCalculations: true\n        };\n        let apple = {\n          id: 1,\n          name: \"Apple Music\",\n          payoutPerStream: 0.00495,\n          marketShareStreams: .0995,\n            marketShareDollars: .2497,\n            includeInCalculations: true\n        };\n        let youtube = {\n          id: 2,\n          name: \"Youtube Content ld\",\n          payoutPerStream: 0.00028,\n          marketShareStreams: .4858,\n            marketShareDollars: .0699,\n            includeInCalculations: true\n        };\n        let amazon = {\n          id: 3,\n          name: \"Amazon Unlimited\",\n          payoutPerStream: 0.01175,\n          marketShareStreams: .0068,\n            marketShareDollars: .0404,\n            includeInCalculations: true\n        };\n        let google = {\n          id: 4,\n          name: \"Google Play\",\n          payoutPerStream: 0.00543,\n          marketShareStreams: .0112,\n            marketShareDollars: .0308,\n            includeInCalculations: true\n        };\n        let pandora = {\n          id: 5,\n          name: \"Pandora\",\n          payoutPerStream: 0.00155,\n          marketShareStreams: .0386,\n            marketShareDollars: .0303,\n            includeInCalculations: true\n        };\n        let deezer = {\n          id: 6,\n          name: \"Deezer\",\n          payoutPerStream: 0.00567,\n          marketShareStreams: .0091,\n            marketShareDollars: .026,\n            includeInCalculations: true\n        };\n        let amazonDig = {\n          id: 7,\n          name: \"Amazon Digital Services\",\n          payoutPerStream: 0.00395,\n          marketShareStreams: .0095,\n            marketShareDollars: .019,\n            includeInCalculations: true\n        };\n        let tidal = {\n          id: 8,\n          name: \"TIDAL\",\n          payoutPerStream: 0.00927,\n          marketShareStreams: 0.0021,\n            marketShareDollars: 0.0098,\n            includeInCalculations: true\n        };\n        let others = {\n          id: 9,\n          name: \"Napster / Rhapsody\",\n          payoutPerStream: 0.0111,\n          marketShareStreams: 0.0014,\n            marketShareDollars: 0.0080,\n            includeInCalculations: true\n        };\n\n\nclass CalcPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            providers: [spotify, apple, youtube, amazon, google, pandora, deezer, amazonDig, tidal, others],\n            streamNumber: null,\n            role: null,\n            recordDeal: [],\n            publishDeal: [],\n            sliderValue: null,\n            recordDealSelected: null,\n            publishingDealSelected: null,\n            advance: 0,\n            costs: 0,\n            grossRev: 0,\n            totRecoupe: 0,\n            publisherShare: 0,\n            writerEarnings: 0,\n            totalEarnings: 0\n        };\n\n    }\n\n    componentDidMount() {\n        console.log(\"mounted\");\n        this.buildRecordDealSelect();\n        this.handleRoleButton(\"Writer & Artist\");\n        this.buildPublishingDealSelect();\n        this.setSliderValue(50);\n        this.testMap();\n        //this.buildDspsArr();\n        this.setInitialStates();\n    }\n\n    render() {\n      return ce('div', null,\n        ce('h2', {className: \"font\"}, 'Welcome to the Revenue Calculator'),\n            ce('input', {id: \"estStreams\", type: \"text\", placeholder: \"Enter Est. Streams\", onChange: e => this.changeStreams(e)}),\n            ce('br'),\n            ce('text', null, 'Role: '),\n            /*ce('select', {onChange: e => this.handleRoleSelect(e)},\n                this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n                ),*/\n            ce('button', {onClick: e => this.handleRoleButton(\"artist\")}, 'Artist Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"writer\")}, 'Writer Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"both\")}, 'Writer & Artist'),\n            ce('br'),\n            ce('text', null, 'Record Deal Type: '),\n            ce('select', {onChange: e => this.handleRecDealSelect(e)},\n                this.state.recordDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Publishing Deal Type: '),\n            ce('select', {onChange: e => this.handlePublishingDealSelect(e)},\n                this.state.publishDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Deal Split: '),\n            ce('input', {type: 'range', min: '1', max: '100', id: 'splitSlider', onChange: e => this.updateSlider(e)}),\n            ce('text', null, 'Guaranteed Income: '),\n            ce('input', {id: \"fromAdvance\", placeholder: \"From Advance\", onChange: e => this.updateAdvance(e)}),\n            ce('br'),\n            ce('text', null, 'Costs: '),\n            ce('input', {placeholder: 'Costs', onChange: e => this.updateCosts(e)}),\n            ce('br'),\n            ce('text', null, 'Recoupable: '),\n            ce('input', {type: 'checkbox', checked: 'true'}),\n            ce('br'),\n            ce('text', null, 'DSPs'),\n            ce('br'),\n            ce('table', {id: 'dspTable'}, \n              ce('thead', null, ce('tr', null, ce('th', null, \"Platform\"), ce('th', null, \"Include\"))),\n              ce('tbody', null, this.state.providers.map(provider => ce('tr', null, ce('td', null, ce('input', {placeholder: provider.name})), ce('td', null, ce('input', {type: 'checkbox', checked: provider.includeInCalculations, onChange: e => this.toggleMe(provider.id)})))))\n            ),\n            ce('br'),\n            //ce('button', {onClick: e => this.calculate()}, 'Calculate'),\n            //ce('br'),\n            ce('text', null, 'Total Revenue: '),\n            ce('br'),\n            ce('text', null, 'Gross Revenue: '),\n            ce('input', {value: this.state.grossRev}),\n            ce('br'),\n            ce('text', null, 'Total Money Needed to Recoupe: '),\n            ce('input', {value: 0}),\n            ce('br'),\n            ce('text', null, 'Unrecouped: '),\n            ce('br'),\n            ce('text', null, 'Label Earnings: '),\n            ce('input', {value: this.state.publisherShare}),\n            ce('text', null, 'Writer Earnings: '),\n            ce('input', {value: this.state.writerEarnings}),\n            ce('br'),\n            ce('text', null, 'TOTAL EARNINGS: '),\n            ce('input', {value: this.state.totalEarnings}),\n            ce('br')\n            \n        )\n\n    }\n\n    testMap() {\n      this.state.providers.map(provider => console.log(provider.name));\n      //this.state.providers.map(provider => ce('tr', null, ce('td', null, ce('text', null, provider.name))), ce('tr', null, ce('td', null, ce('input', {type: 'checkbox', checked: provider.includeInCalculations, onClick: e => this.toggleMe(provider.id)}))))\n    }\n\n    setInitialStates() {\n\n      this.setState({streamNumber: 1000000000,role: \"Writer & Artist\", recordDealSelected: \"Royalty\", publishingDealSelected: \"Full/Traditional\", advance: 0, costs: 0, grossRev: 0, publisherShare: 0, writerEarnings: 0, totalEarnings: 0});\n\n      console.log(this.state.providers)\n      this.calculate();\n    }\n\n    changeStreams(e) {\n        console.log(\"changed streams to: \" + e.target.value);\n        this.setState({streamNumber: e.target.value});\n        this.calculate();\n    }\n\n    updateAdvance(e) {\n      console.log(\"changed advance to: \" + e.target.value);\n      this.setState({advance: e.target.value});\n      this.calculate();\n    }\n\n    updateCosts(e) {\n        console.log(\"changed costs to: \" + e.target.value);\n        this.setState({costs: e.target.value});\n        this.calculate();\n    }\n\n    setSliderValue(val) {\n        this.setState( {sliderValue: val});\n        this.calculate();\n    }\n    updateSlider(e) {\n        console.log(e.target.value)\n        //val = document.getElementById(\"splitSlider\").value()\n        this.setState( {sliderValue: e.target.value})\n        this.calculate();\n    }\n\n    buildPublishingDealSelect() {\n        let fullTrad = {\n            id: 0,\n            name: \"Full/Traditional\"\n        }\n        let coPublishing = {\n            id: 1,\n            name: \"Co-Publishing\"\n        }\n        let adminDeal = {\n            id: 2,\n            name: \"Admin Deal\"\n        }\n        let noDeal = {\n            id: 3,\n            name: \"No Deal\"\n        }\n        let deals = [fullTrad, coPublishing, adminDeal, noDeal]\n        this.setState( {publishDeal: deals})\n    }\n\n    handlePublishingDealSelect(e) {\n        console.log(e.target.value);\n        this.setState({publishingDealSelected: e.target.value});\n        this.calculate();\n    }\n\n\n    handleRoleButton(which) {\n        console.log(which);\n        this.setState({role: which})\n        this.calculate();\n    }\n\n   // handleRecDealSelect(e)\n\n    handleRecDealSelect(e) {\n        //console.log(\"selecting Roles\");\n        console.log(e.target.value);\n        this.setState({recordDealSelected: e.target.value})\n        this.calculate();\n    }\n\n    buildRecordDealSelect() {\n        //console.log(\"Roles!\");\n        let royalty = {\n            id: 0,\n            name: \"Royalty\"\n        };\n        let netProfit = {\n            id: 1,\n            name: \"Net Profit\"\n        };\n        let distributionPercent = {\n            id: 2,\n            name: \"Distribution Percent\"\n        };\n        let labelServices = {\n            id: 3,\n            name: \"Label Services\"\n        }\n\n        let rls = [royalty, netProfit, distributionPercent, labelServices];\n        this.setState( {recordDeal: rls} );\n    }\n\n    ///////// DSP Stuff ///////\n\n    buildDspsArr() {\n\n        //handling dsps\n        let spotify = {\n          id: 0,\n          name: \"Spotify\",\n          payoutPerStream: 0.00331,\n          marketShareStreams: .2922,\n            marketShareDollars: .4893,\n            includeInCalculations: true\n        };\n        let apple = {\n          id: 1,\n          name: \"Apple Music\",\n          payoutPerStream: 0.00495,\n          marketShareStreams: .0995,\n            marketShareDollars: .2497,\n            includeInCalculations: true\n        };\n        let youtube = {\n          id: 2,\n          name: \"Youtube Content ld\",\n          payoutPerStream: 0.00028,\n          marketShareStreams: .4858,\n            marketShareDollars: .0699,\n            includeInCalculations: true\n        };\n        let amazon = {\n          id: 3,\n          name: \"Amazon Unlimited\",\n          payoutPerStream: 0.01175,\n          marketShareStreams: .0068,\n            marketShareDollars: .0404,\n            includeInCalculations: true\n        };\n        let google = {\n          id: 4,\n          name: \"Google Play\",\n          payoutPerStream: 0.00543,\n          marketShareStreams: .0112,\n            marketShareDollars: .0308,\n            includeInCalculations: true\n        };\n        let pandora = {\n          id: 5,\n          name: \"Pandora\",\n          payoutPerStream: 0.00155,\n          marketShareStreams: .0386,\n            marketShareDollars: .0303,\n            includeInCalculations: true\n        };\n        let deezer = {\n          id: 6,\n          name: \"Deezer\",\n          payoutPerStream: 0.00567,\n          marketShareStreams: .0091,\n            marketShareDollars: .026,\n            includeInCalculations: true\n        };\n        let amazonDig = {\n          id: 7,\n          name: \"Amazon Digital Services\",\n          payoutPerStream: 0.00395,\n          marketShareStreams: .0095,\n            marketShareDollars: .019,\n            includeInCalculations: true\n        };\n        let tidal = {\n          id: 8,\n          name: \"TIDAL\",\n          payoutPerStream: 0.00927,\n          marketShareStreams: 0.0021,\n            marketShareDollars: 0.0098,\n            includeInCalculations: true\n        };\n        let others = {\n          id: 9,\n          name: \"Napster / Rhapsody\",\n          payoutPerStream: 0.0111,\n          marketShareStreams: 0.0014,\n            marketShareDollars: 0.0080,\n            includeInCalculations: true\n        };\n        let dsps = [spotify, apple, youtube, amazon, google, pandora, deezer, amazonDig, tidal, others];\n        console.log(dsps)\n\n        this.setState( {providers: dsps} );\n\n    }\n\n    toggleMe(index) {\n      this.state.providers[index].includeInCalculations = !this.state.providers[index].includeInCalculations;\n      //console.log(dsps[index].name);\n      //console.log(dsps[index].includeInCalculations);\n      this.calculate();\n    }\n\n    /// MATH STUFF /////\n    calculate() {\n        this.getPublisherShare();\n\n        console.log(\"calculating\");\n        let artistShare;\n        let labelShare;\n        // Why are there double semi-colons?\n                   //prob a typo\n        let totalMoneyToRecoupe = parseFloat(this.state.advance) + parseFloat(this.state.costs);\n        console.log(totalMoneyToRecoupe)\n        let grossRevenue= this.state.streamNumber * this.weightedAverageOfSelected();\n        console.log(\"grossRevenue: \" + grossRevenue)\n        //checkDSPs();\n        //console.log(estStreams.value * avgPayout);\n        //console.log(estStreams.value * weightedAverageOfSelected());\n        if (this.state.recordDealSelected === \"Royalty\") {\n            // Artist Split\n            if((grossRevenue * (parseFloat(this.state.sliderValue)/100)) <= totalMoneyToRecoupe){\n              console.log(\"unrecouped\");\n              artistShare = 0;\n            } else {\n              artistShare = (grossRevenue * (parseFloat(this.state.sliderValue)/100)) - totalMoneyToRecoupe;\n            }\n            labelShare = grossRevenue * (1-(parseFloat(this.state.sliderValue)/100));\n\n        } else if (this.state.recordDealSelected === \"Net Profit\" || this.state.recordDealSelected === \"Distribution Percent\" || this.state.recordDealSelected === \"Distribution Fee\") {\n            //net profit deals are generally guaranteed 50/50, distribution are generally 70/30 artist/label\n            let profit = (grossRevenue - this.state.costs);\n            // Artist Split\n            if(((profit * (parseFloat(this.state.sliderValue)/100)) - parseFloat(this.state.advance)) < 0){\n              console.log(\"unrecouped\");\n              artistShare = 0;\n            } else {\n              artistShare = (profit * (parseFloat(this.state.sliderValue)/100)) - parseFloat(this.state.advance);\n            }\n            // Label Split Net Profit, Distributions\n            if(this.state.recordDealSelected === \"Net Profit\" || this.state.recordDealSelected === \"Distribution Percent\") {\n                if(profit < 0){\n                    labelShare = 0;\n                } else {\n                    labelShare = (profit * (1-(parseFloat(this.state.sliderValue)/100)));\n                }\n            } else labelShare = grossRevenue - artistShare;\n\n            /* Nik Label Share for Net Profit, %Distribution Deals\n            if(profit < 0){\n              labelShare = 0;\n            } else {\n              labelShare = (profit * (1-(parseFloat(artistDeal.value)/100)));\n            }\n            */\n\n        } else if (this.state.recordDealSelected === \"Label Services\") {\n            // Artist Split\n            if((grossRevenue * (parseFloat(this.state.sliderValue)/100)) <= totalMoneyToRecoupe){\n              console.log(\"unrecouped\");\n              artistShare = 0;\n            } else {\n              artistShare = (grossRevenue * (parseFloat(this.state.sliderValue)/100)) - totalMoneyToRecoupe;\n            }\n            labelShare = grossRevenue * (1-(parseFloat(this.state.sliderValue)/100)) + this.state.costs;//extra menu items would be factored into costs\n        }\n\n        console.log(\"grossRevenue: \" + grossRevenue)\n        console.log(\"totRecoupe: \" + totalMoneyToRecoupe)\n        console.log(\"writerEarnings: \" + artistShare)\n        console.log(\"publisherShare: \" + labelShare)\n\n        this.setState({grossRev: grossRevenue, totRecoupe: totalMoneyToRecoupe, writerEarnings: artistShare, publisherShare: labelShare});\n\n        this.getTotalEarnings(artistShare);\n\n    }\n    getPublisherShare() {\n        //console.log(\"avgPubPayout: \" + avgPubPayout)\n\n        let pubGrossRevenue = avgPubPayout * this.state.streamNumber;\n        let pubPerformanceRevenue = pubGrossRevenue * .5;\n        let pubMechanicalRevenue = pubGrossRevenue * .5;\n        let pubPROAdminFee = pubPerformanceRevenue * .165;\n        let pubMechanicalAdminFee = pubMechanicalRevenue * .15;\n        let pubMechanicalRecordFee = (pubMechanicalRevenue - pubMechanicalAdminFee) * .3;\n\n        let publisherPercentage;\n\n        if(this.state.publishingDealSelected === \"Full/Traditional\") {\n            publisherPercentage = 1.0;\n            this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n            this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n        } else if(this.state.publishingDealSelected === \"Co-Publishing\") {\n            publisherPercentage = 0.5;\n            this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n            this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n        } else if(this.state.publishingDealSelected === \"Admin Deal\") {\n            publisherPercentage = 0.1;\n            this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n            this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n        } else if(this.state.publishingDealSelected === \"No Deal\") {\n            publisherPercentage = 0.0;\n            this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n            this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n        }\n    }\n\n    weightedAverageOfSelected() {\n        let sum = 0.0;\n        for(let i=0; i < this.state.providers.length; i++) {\n          if(this.state.providers[i].includeInCalculations) {\n                sum += (this.state.providers[i].payoutPerStream * this.state.providers[i].marketShareStreams)\n            }\n        }\n        let sumOfWeights = 0.0;\n        for(let i=0;i < this.state.providers.length; i++) {\n            sumOfWeights += this.state.providers[i].marketShareStreams\n        }\n        console.log(sum/sumOfWeights);\n        return sum/sumOfWeights;\n    }\n\n\n\n    getTotalEarnings(artistShare) {\n        if(this.state.role === \"both\") {\n            this.setState({totalEarnings: artistShare + parseFloat(this.state.writerEarnings)});\n        } else if(this.state.role === \"artist\") {\n            this.setState({totalEarnings: artistShare});\n        } else if(this.state.role === \"writer\") {\n            this.setState({totalEarnings: this.state.writerEarnings});\n        }\n    }\n\n\n}\n\n\nexport default CalcPage;\n","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/SmallText.js",[],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/SwitchButton.js",[],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/DspButton.js",["63"],"/* eslint-env browser, commonjs, jquery, es6 */\n\nimport React from 'react';\nimport '../stylesheets/DspButton.css';\nimport SmallText from './SmallText';\n\n\nclass DspButton extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      button: true\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(){\n    this.setState({\n      button:!this.state.button\n\n    })\n  }\n\n  testButton(){\n    console.log(\"DSP - MAKE VALUE TOGGLE ON/OFF\")\n  }\n\n  render(){\n    return (\n    <div className=\"container\">\n      <button className={this.state.button ? \"buttonTrue\": \"buttonFalse\"}\n            onClick={() => {\n            this.handleClick();\n            this.testButton();\n            }}>\n        {this.props.text}\n      </button>\n    </div>\n    )\n  }\n}\n\nexport default DspButton;\n","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/NumberInput.js",["64","65","66"],"import React from \"react\";\nimport { render } from \"react-dom\";\nimport {TransitionMotion, spring } from 'react-motion';\nimport \"../stylesheets/NumberInput.css\";\n\nclass NumberInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: (props.locked && props.active) || false,\n      // FIX THIS VALUE TO HAVE INPUT BE TRUE... RN \"\" is so 1 is \"\" then 12 is \"1\"\n      value: props.value || \"\",\n      error: props.error || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({ value, error: 0 });\n  }\n\n  handleKeyPress(event) {\n    console.log(this.state.value)\n  }\n\n  render() {\n    const { active, value, error, label } = this.state;\n    const { predicted, locked } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) &&\n      \"active\"} ${locked && !active && \"locked\"}`;\n\n    return (\n      <div className={fieldClassName}>\n        {active &&\n          value &&\n          predicted &&\n          predicted.includes(value) && <p className=\"predicted\">{predicted}</p>}\n        <input\n          id={0}\n          type=\"text\"\n          value={value}\n          placeholder={label}\n          onChange={this.changeValue.bind(this)}\n          onKeyPress={this.handleKeyPress.bind(this)}\n          onFocus={() => !locked && this.setState({ active: true })}\n          onBlur={() => !locked && this.setState({ active: false })}\n        />\n        <label htmlFor={0} className={error && \"error\"}>\n          {error || label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default NumberInput;\n","/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/ButtonGroup.js",[],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/TextButton.js",[],"/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/TitleText.js",[],["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":18},{"ruleId":"73","severity":1,"message":"78","line":10,"column":7,"nodeType":"75","messageId":"76","endLine":10,"endColumn":9},{"ruleId":"73","severity":1,"message":"79","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":396,"column":7,"nodeType":"82","endLine":396,"endColumn":34},{"ruleId":"73","severity":1,"message":"79","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":17},{"ruleId":"73","severity":1,"message":"83","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},{"ruleId":"73","severity":1,"message":"84","line":3,"column":9,"nodeType":"75","messageId":"76","endLine":3,"endColumn":25},{"ruleId":"73","severity":1,"message":"85","line":3,"column":27,"nodeType":"75","messageId":"76","endLine":3,"endColumn":33},{"ruleId":"69","replacedBy":"86"},{"ruleId":"71","replacedBy":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'CalcPage' is defined but never used.","Identifier","unusedVar","'TextButton' is defined but never used.","'ce' is assigned a value but never used.","'SmallText' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'render' is defined but never used.","'TransitionMotion' is defined but never used.","'spring' is defined but never used.",["88"],["89"],"no-global-assign","no-unsafe-negation"]