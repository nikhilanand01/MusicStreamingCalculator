[{"/Users/samvincent/Desktop/MusicStreamingCalculator/src/index.js":"1","/Users/samvincent/Desktop/MusicStreamingCalculator/src/reportWebVitals.js":"2","/Users/samvincent/Desktop/MusicStreamingCalculator/src/App.js":"3","/Users/samvincent/Desktop/MusicStreamingCalculator/src/CalcPage.js":"4","/Users/samvincent/Desktop/MusicStreamingCalculator/src/TestCompPage.js":"5","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/NumberInput.js":"6","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/SmallText.js":"7","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/SingleDropDown.js":"8","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/DspButton.js":"9","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/ButtonGroup.js":"10","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/SwitchButton.js":"11","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/TitleText.js":"12","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/MultiDropDown.js":"13","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/BarChart.js":"14","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/RadialChart.js":"15","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/DealSplitSlider.js":"16","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/StreamSlider.js":"17","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/ButtonGroupTest.js":"18"},{"size":500,"mtime":1607087775352,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607083732109,"results":"21","hashOfConfig":"20"},{"size":246,"mtime":1608034342279,"results":"22","hashOfConfig":"20"},{"size":27808,"mtime":1608045560450,"results":"23","hashOfConfig":"20"},{"size":29070,"mtime":1608034076125,"results":"24","hashOfConfig":"20"},{"size":1745,"mtime":1607685485465,"results":"25","hashOfConfig":"20"},{"size":245,"mtime":1608032170960,"results":"26","hashOfConfig":"20"},{"size":839,"mtime":1608032170959,"results":"27","hashOfConfig":"20"},{"size":894,"mtime":1607692994709,"results":"28","hashOfConfig":"20"},{"size":930,"mtime":1608040837819,"results":"29","hashOfConfig":"20"},{"size":1076,"mtime":1607261397271,"results":"30","hashOfConfig":"20"},{"size":197,"mtime":1608032170961,"results":"31","hashOfConfig":"20"},{"size":632,"mtime":1607511997610,"results":"32","hashOfConfig":"20"},{"size":1363,"mtime":1608032170956,"results":"33","hashOfConfig":"20"},{"size":2057,"mtime":1608032170958,"results":"34","hashOfConfig":"20"},{"size":4156,"mtime":1608035661824,"results":"35","hashOfConfig":"20"},{"size":3324,"mtime":1608032170960,"results":"36","hashOfConfig":"20"},{"size":2217,"mtime":1608045602872,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1f7bv11",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/samvincent/Desktop/MusicStreamingCalculator/src/index.js",[],["84","85"],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/reportWebVitals.js",[],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/App.js",["86"],"import React from 'react';\n\nimport './App.css';\nimport CalcPage from './CalcPage.js';\nimport TestCompPage from './TestCompPage.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalcPage/>\n    </div>\n  );\n}\n\n\nexport default App;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/CalcPage.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/TestCompPage.js",["101","102","103","104","105","106","107","108","109","110","111"],"import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nimport TitleText from './components/TitleText.js';\nimport DspButton from './components/DspButton.js';\nimport SwitchButton from './components/SwitchButton.js';\nimport NumberInput from './components/NumberInput.js';\nimport TabGroup from './components/ButtonGroup.js';\nimport SingleDropDown from './components/SingleDropDown.js';\nimport MultiDropDown from './components/MultiDropDown.js';\nimport BarChart from './components/BarChart.js';\nimport RadialChart from './components/RadialChart.js';\nimport DealSplitSlider from './components/DealSplitSlider.js';\nimport StreamSlider from './components/StreamSlider.js';\n\nconst labelDealOptions = [\n  { value: 'royalty', label: 'Royalty' },\n  { value: 'netProfit', label: 'Net Profit' },\n  { value: 'distributionPercent', label: 'Distribution (%)' },\n  { value: 'distributionFee', label: 'Distribution (fee)' },\n  { value: 'labelServices', label: 'Label Services' }\n]\n\nconst pubDealOptions = [\n  { value: 'Full/Traditional', label: 'Full/Traditional' },\n  { value: 'Co-Publishing', label: 'Co-publising' },\n  { value: 'Admin', label: 'Admin' },\n  { value: 'No Deal', label: 'No Deal' }\n]\n\nconst marketingSplitOptions = [\n  { value: 0.0, label: '0%' },\n  { value: 0.5, label: '50%' },\n  { value: 1.0, label: '100%' }\n]\n\nconst labelServicesOptions = [\n  { value: 'steamDistribution', label: 'Steam Distribution' },\n  { value: 'avertising', label: 'Avertising' },\n  { value: 'analytics', label: 'Analytics' },\n  { value: 'royaltyAccounting', label: 'Royalty Accounting' },\n  { value: 'splitPayments', label: 'Split Payments' },\n]\n\nconst roleTypes = [\"Recording Artist Only\", \"Writer Only\", \"Both\"];\n\n{/* LABEL SERVICES RENDER CODE....\n  <SmallText text=\"Label Services\" style={{ fontSize: '18px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'left', color: '#323747',marginBottom:'5px' }}/>\n  <MultiDropDown options={labelServicesOptions} defaultValue={labelServicesOptions[0]}/>\n  <div style={{textAlign: 'right'}}>\n    <SmallText text=\"Created By: Nikhil Anand, Sam Vincent, Alexandre Perrin, Peter Dyson\"/>\n  </div>\n  */}\n\n\n//average / approx payout for publishing for stream\nconst avgPubPayout = 0.0007174565191\n\n//handling dsps\nlet spotify = {\n  id: 0,\n  ref: React.createRef(),\n  name: \"Spotify\",\n  payoutPerStream: 0.00331,\n  marketShareStreams: .2922,\n    marketShareDollars: .4893,\n    includeInCalculations: true\n};\nlet apple = {\n  id: 1,\n  ref: React.createRef(),\n  name: \"Apple Music\",\n  payoutPerStream: 0.00495,\n  marketShareStreams: .0995,\n    marketShareDollars: .2497,\n    includeInCalculations: true\n};\nlet youtube = {\n  id: 2,\n  ref: React.createRef(),\n  name: \"Youtube Content ld\",\n  payoutPerStream: 0.00028,\n  marketShareStreams: .4858,\n    marketShareDollars: .0699,\n    includeInCalculations: true\n};\nlet amazon = {\n  id: 3,\n  ref: React.createRef(),\n  name: \"Amazon Unlimited\",\n  payoutPerStream: 0.01175,\n  marketShareStreams: .0068,\n    marketShareDollars: .0404,\n    includeInCalculations: true\n};\nlet google = {\n  id: 4,\n  ref: React.createRef(),\n  name: \"Google Play\",\n  payoutPerStream: 0.00543,\n  marketShareStreams: .0112,\n    marketShareDollars: .0308,\n    includeInCalculations: true\n};\nlet pandora = {\n  id: 5,\n  ref: React.createRef(),\n  name: \"Pandora\",\n  payoutPerStream: 0.00155,\n  marketShareStreams: .0386,\n    marketShareDollars: .0303,\n    includeInCalculations: true\n};\nlet deezer = {\n  id: 6,\n  name: \"Deezer\",\n  ref: React.createRef(),\n  payoutPerStream: 0.00567,\n  marketShareStreams: .0091,\n    marketShareDollars: .026,\n    includeInCalculations: true\n};\nlet amazonDig = {\n  id: 7,\n  ref: React.createRef(),\n  name: \"Amazon Digital Services\",\n  payoutPerStream: 0.00395,\n  marketShareStreams: .0095,\n    marketShareDollars: .019,\n    includeInCalculations: true\n};\nlet tidal = {\n  id: 8,\n  ref: React.createRef(),\n  name: \"TIDAL\",\n  payoutPerStream: 0.00927,\n  marketShareStreams: 0.0021,\n    marketShareDollars: 0.0098,\n    includeInCalculations: true\n};\n\nclass TestCompPage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.dealTypeRef = React.createRef();\n        this.tabGroupRef = React.createRef();\n        this.pubTypeRef = React.createRef();\n        this.advanceRef = React.createRef();\n        this.costsRef = React.createRef();\n        this.artistButtonRef = React.createRef();\n        this.writerButtonRef = React.createRef();\n        this.bothButtonRef = React.createRef();\n\n        this.state = {\n            providers: [spotify, apple, youtube, amazon, google, pandora, deezer, amazonDig, tidal],\n            streamNumber: null,\n            role: null,\n            recordDeal: [],\n            publishDeal: [],\n            sliderValue: 50,\n            recordDealSelected: null,\n            publishingDealSelected: null,\n            advance: 0,\n            costs: 0,\n            grossRev: 0,\n            totRecoupe: 0,\n            publisherShare: 0,\n            writerEarnings: 0,\n            totalEarnings: 0,\n        };\n\n    }\n\n    componentDidMount() {\n        this.buildRecordDealSelect();\n        this.handleRoleButton(\"Writer & Artist\");\n        this.buildPublishingDealSelect();\n        this.setSliderValue(50);\n        this.testMap();\n        this.setInitialStates();\n    }\n\n    render() {\n      return (\n        <div style={{padding: '2%', display: 'flex', flexDirection: 'column'}}>\n\n            <div style={{textAlign: 'center'}}>\n              <TitleText text=\"The Streaming Calculator\" style={{color: '#111', fontSize: '48px', fontWeight: '700', lineHeight: '48px', margin: '0 0 24px', padding: '0 30px', textAlign: 'center', textTransform: 'uppercase'}}/>\n            </div>\n\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n\n                <div style={{width: '33%', flexDirection: 'column', paddingRight: '.5%', marginRight: '1%', borderRight: 'thin dotted #b3d0ff'}}>\n                    <SmallText text=\"(1. Start Here By Entering Information About Your Record & Publishing Deal)\" style={{ fontSize: '12px', fontWeight: 'light', lineHeight: '1.09', textAlign: 'center', color: 'grey', marginTop: 0 }}/>\n                    <SmallText text=\"About You\" style={{ fontSize: '24px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'center', color: '#323747', textDecoration: 'underline', marginTop: 0, marginBottom: 0 }}/>\n                    <div>\n                      <SmallText text=\"Your Role\" style={{textAlign: 'center', fontSize: '18px', fontWeight: 'bold', lineHeight: '1.09', color: '#323747'}}/>\n                      <TabGroup types={roleTypes}/>\n                    </div>\n\n                  <div>\n                    <div style={{marginBottom: '8%'}}>\n                      <SmallText text=\"Record Deal Type\" style={{ fontSize: '18px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'left', color: '#323747',marginBottom:'5px' }}/>\n                      <SingleDropDown\n                          ref={this.dealTypeRef}\n                          options={labelDealOptions}\n                          onChange = {e => this.getStateRecDeal(e)}/>\n                      <SmallText text=\"Record Deal Split\" style={{ textAlign: 'center', fontSize: '16px', fontWeight: 'bold', lineHeight: '1.09', color: '#323747',marginBottom:'3px' }}/>\n                      <DealSplitSlider/>\n                      <SmallText text=\"Record Deal Advance\" style={{ textAlign: 'center', fontSize: '16px', fontWeight: 'bold', lineHeight: '1.09', color: '#323747'}}/>\n                      <div style={{display: 'flex', justifyContent: 'center'}}>\n                        <NumberInput ref={this.advanceRef}\n                          id= {\"numInput\"}\n                          label = \"Advance on Earnings\"\n                          locked = {false}\n                          active = {false}\n                          onChange = {e => this.getStateAdvance(e)}/>\n                      </div>\n                    </div>\n\n                    <SmallText text=\"Publishing Deal Type\" style={{ fontSize: '18px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'left', color: '#323747',marginBottom:'5px' }}/>\n                    <SingleDropDown\n                        ref={this.pubTypeRef}\n                        options={pubDealOptions}\n                        onChange = {e => this.getStatePubDeal(e)}\n                    />\n                  </div>\n\n                  <div style={{borderTop: 'thin dotted #b3d0ff', marginTop: '2%'}}>\n                    <SmallText text=\"DSPs\" style={{ fontSize: '24px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'center', color: '#323747',marginBottom:'0', marginTop: 5 }}/>\n                    <SmallText text=\"(Select Which DSPs to include in Calculation)\" style={{ fontSize: '12px', fontWeight: 'light', lineHeight: '1.09', textAlign: 'center', color: 'grey' }}/>\n                      <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\n                        {this.state.providers.map((provider) =>\n                           <DspButton ref={provider.ref}\n                             key={provider.id}\n                             text={provider.name}\n                             onChange = {e => this.getButtonClick(provider.id)}\n                           />\n                        )}\n                      </div>\n                  </div>\n                </div>\n\n\n                <div style={{width: '32%', flexDirection: 'column', paddingRight: '1%'}}>\n                    <SmallText text=\"(2. Now Entering Some Information About Your Song)\" style={{ fontSize: '12px', fontWeight: 'light', lineHeight: '1.09', textAlign: 'center', color: 'grey', marginTop: 0 }}/>\n                    <SmallText text=\"About Your Song\" style={{ fontSize: '24px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'center', color: '#323747', textDecoration: 'underline', marginTop: 0, marginBottom: 0 }}/>\n                    <div style={{alignItems: 'center', borderBottom: 'thin dotted #b3d0ff', paddingBottom: '2.5%'}}>\n                      <SmallText text=\"Estimated Streams\" style={{textAlign: 'center', fontSize: '18px', fontWeight: 'bold', lineHeight: '1.09', color: '#323747'}}/>\n                      <NumberInput id={0} label=\"Estimated Streams\" locked={false} active={false} />\n                      <StreamSlider />\n                    </div>\n                    <div>\n                      <SmallText text=\"Costs\" style={{ fontSize: '24px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'center', color: '#323747', marginBottom: 0 }} />\n                      <SmallText text=\"Recoupable\" style={{ fontSize: '12px', fontWeight: 'light', lineHeight: '1.09', textAlign: 'right', color: 'grey', paddingRight: '5%' }}/>\n                      <div style={{display: 'flex', flexDirection: 'row', marginBottom: '2%'}}>\n                        <NumberInput id={1} label=\"Recording Costs\" locked={false} active={false} />\n                        <div style={{width: '30%'}}>\n                          <SwitchButton/>\n                        </div>\n                      </div>\n                      <div style={{display: 'flex', flexDirection: 'row', marginBottom: '2%'}}>\n                        <NumberInput id={2} label=\"Marketing Costs\" locked={false} active={false} />\n                        <div style={{marginLeft: '1%', width: '29%'}}>\n                          <SingleDropDown options={marketingSplitOptions}/>\n                        </div>\n                      </div>\n                      <div style={{display: 'flex', flexDirection: 'row', marginBottom: '2%'}}>\n                        <NumberInput id={3} label=\"Distrubtion Costs\" locked={false} active={false} />\n                        <div style={{width: '30%'}}>\n                          <SwitchButton/>\n                        </div>\n                      </div>\n                      <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <NumberInput id={4} label=\"Misc. Costs\" locked={false} active={false} />\n                        <div style={{width: '30%'}}>\n                          <SwitchButton/>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div style={{display: 'flex', flexDirection: 'row',justifyContent: 'center',alignItems: 'center'}}>\n                      <div style={{flexDirection: 'column'}}>\n                        <SmallText text=\"Total Costs:\" style={{ fontSize: '18px', fontWeight: '500', lineHeight: '1.09', textAlign: 'center', color: '#323747' }}/>\n                        <SmallText text=\"#####\" style={{ fontSize: '20px', fontWeight: '500', lineHeight: '1.09', textAlign: 'center', color: '#323747' }}/>\n                      </div>\n                      <RadialChart />\n                    </div>\n\n                </div>\n\n                <div style={{flexDirection: 'column', width: '35%', borderLeft: 'thin solid #b3d0ff'}}>\n                  <div style={{backgroundColor: '#f2f6ff'}}>\n                    <div>\n                      <SmallText text=\"(3. Here are your results!)\" style={{ fontSize: '12px', fontWeight: 'light', lineHeight: '1.09', textAlign: 'center', color: 'grey', marginTop: 0 }}/>\n                      <SmallText text=\"Your Results\" style={{ fontSize: '24px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'center', color: '#323747', textDecoration: 'underline', marginTop: 0, marginBottom: 0 }}/>\n                      <SmallText text=\"You've Earned: #####\" style={{ fontSize: '24px', fontWeight: 'bold', lineHeight: '1.09', textAlign: 'center', color: '#323747' }}/>\n                      <SmallText text=\"Total Revenue Created: #####\" style={{ fontSize: '20px', fontWeight: '500', lineHeight: '1.09', textAlign: 'center', color: '#323747' }}/>\n                      <SmallText text=\"Total Recoupable Costs: #####\" style={{ fontSize: '18px', fontWeight: '500', lineHeight: '1.09', textAlign: 'center', color: '#323747' }}/>\n                    </div>\n                    <div style={{borderBottom: 'thin solid #b3d0ff'}}>\n                      <BarChart/>\n                    </div>\n                  </div>\n                  <div>\n                    <SmallText text=\"Advanced Calculations\" style={{textAlign: 'center', fontSize: '18px', fontWeight: 'bold', lineHeight: '1.09', color: '#323747', marginBottom: 0}}/>\n                    <SmallText text=\"(If you are trying to achieve a certain goal. Select it here)\" style={{ fontSize: '12px', fontWeight: 'light', lineHeight: '1.09', textAlign: 'center', color: 'grey'}}/>\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n                      <div style={{flexDirection: 'column', marginRight: '5%'}}>\n                        <DspButton text=\"Auto Recoup\" />\n                        <SmallText text=\"Streams Needed: #####\" style={{ fontSize: '14px', fontWeight: '500', lineHeight: '1.09', textAlign: 'center', color: '#323747' }}/>\n                      </div>\n                      <div style={{flexDirection: 'column'}}>\n                        <DspButton text=\"Money Goal\" />\n                        <NumberInput id={6} label=\"I want to Make....\" locked={false} active={false} />\n                        <SmallText text=\"Streams Needed: #####\" style={{ fontSize: '14px', fontWeight: '500', lineHeight: '1.09', textAlign: 'center', color: '#323747' }}/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n            </div>\n\n        </div>\n\n        )\n    }\n\n\n\n  getRoleButton(name) {\n       console.log(name);\n       console.log(this.artistButtonRef.current.state.button);\n       console.log(this.writerButtonRef.current.state.button);\n       console.log(this.bothButtonRef.current.state.button);\n\n       if(name === \"artist\" && !this.artistButtonRef.current.state.button) {\n          this.handleRoleButton(\"artist\");\n          this.writerButtonRef.current.setState({button: false});\n          this.bothButtonRef.current.setState({button: false});\n          //this.state.\n       } else if (name === \"writer\" && !this.writerButtonRef.current.state.button) {\n          this.handleRoleButton(\"writer\");\n          this.artistButtonRef.current.setState({button: false});\n          this.bothButtonRef.current.setState({button: false});\n       } else if (name === \"both\" && !this.bothButtonRef.current.state.button) {\n          this.handleRoleButton(\"both\");\n          this.writerButtonRef.current.setState({button: false});\n          this.artistButtonRef.current.setState({button: false});\n       }\n  }\n\n  getButtonClick(id) {\n    //console.log(\"clicked: \" + id);\n    //console.log(this.state.providers[id].ref.current.state);\n    if(this.state.providers[id].ref.current.state.button != null && this.state.providers[id].ref.current.state.button != this.state.providers[id].includeInCalculations) {\n      this.toggleMe(id);\n    }\n\n  }\n\n  getStateCosts() {\n    console.log(this.costsRef.current.state)\n    if(this.costsRef.current.state.value != \"\" && parseInt(this.costsRef.current.state.value) != this.state.costs) {\n      const e = parseInt(this.costsRef.current.state.value);\n      this.updateCosts(e);\n    }\n  }\n\n  getStateAdvance() {\n    console.log(this.advanceRef.current.state)\n    if(this.advanceRef.current.state.value != \"\" && parseInt(this.advanceRef.current.state.value) != this.state.advance) {\n        const e = parseInt(this.advanceRef.current.state.value);\n        this.updateAdvance(e);\n    }\n  }\n\n  getStatePubDeal() {\n    //console.log(\"getting state rec deal\");\n    if(this.pubTypeRef.current.state.selectedOption != null && this.pubTypeRef.current.state.selectedOption.value != this.state.publishingDealSelected) {\n      //console.log(this.dealTypeRef.current.state.selectedOption.value);\n      const e = this.pubTypeRef.current.state.selectedOption.value;\n      this.handlePublishingDealSelect(e);\n    }\n    //const node = this.dealTypeRef.current;\n    //console.log(\"Node: \" + node);\n  }\n\n  getStateRecDeal() {\n    //console.log(\"getting state rec deal\");\n    if(this.dealTypeRef.current.state.selectedOption != null && this.dealTypeRef.current.state.selectedOption.value != this.state.recordDealSelected) {\n      //console.log(this.dealTypeRef.current.state.selectedOption.value);\n      const e = this.dealTypeRef.current.state.selectedOption.value;\n      this.handleRecDealSelect(e);\n    }\n    //const node = this.dealTypeRef.current;\n    //console.log(\"Node: \" + node);\n  }\n\n  testMap() {\n    this.state.providers.map(provider => console.log(provider.name));\n    //this.state.providers.map(provider => ce('tr', null, ce('td', null, ce('text', null, provider.name))), ce('tr', null, ce('td', null, ce('input', {type: 'checkbox', checked: provider.includeInCalculations, onClick: e => this.toggleMe(provider.id)}))))\n  }\n\n  setInitialStates() {\n\n    this.setState({streamNumber: 1000000000,role: \"Writer & Artist\", recordDealSelected: \"Royalty\", publishingDealSelected: \"Full/Traditional\", advance: 0, costs: 0, grossRev: 0, publisherShare: 0, writerEarnings: 0, totalEarnings: 0});\n\n    console.log(this.state.providers)\n    this.calculate();\n  }\n\n  changeStreams(e) {\n      console.log(\"changed streams to: \" + e.target.value);\n      this.setState({streamNumber: e.target.value});\n      this.calculate();\n  }\n\n  updateAdvance(e) {\n    console.log(\"changed advance to: \" + e);\n    this.setState({advance: e});\n    this.calculate();\n  }\n\n  updateCosts(e) {\n      console.log(\"changed costs to: \" + e);\n      this.setState({costs: e});\n      this.calculate();\n  }\n\n  setSliderValue(val) {\n      this.setState( {sliderValue: val});\n      this.calculate();\n  }\n\n  updateSlider(e) {\n      console.log(e.target.value)\n      //val = document.getElementById(\"splitSlider\").value()\n      this.setState( {sliderValue: e.target.value})\n      this.calculate();\n  }\n\n  buildPublishingDealSelect() {\n      let fullTrad = {\n          id: 0,\n          name: \"Full/Traditional\"\n      }\n      let coPublishing = {\n          id: 1,\n          name: \"Co-Publishing\"\n      }\n      let adminDeal = {\n          id: 2,\n          name: \"Admin Deal\"\n      }\n      let noDeal = {\n          id: 3,\n          name: \"No Deal\"\n      }\n      let deals = [fullTrad, coPublishing, adminDeal, noDeal]\n      this.setState( {publishDeal: deals})\n  }\n\n  handlePublishingDealSelect(e) {\n      console.log(e);\n      this.setState({publishingDealSelected: e});\n      this.calculate();\n  }\n\n  handleRoleButton(which) {\n      console.log(which);\n      this.setState({role: which})\n      this.calculate();\n  }\n\n // handleRecDealSelect(e)\n\n  handleRecDealSelect(e) {\n      console.log(\"selecting Roles\");\n      console.log(e);\n      if(e === \"royalty\") {\n        this.setState({sliderValue: 20});\n      } else if (e === \"netProfit\") {\n        this.setState({sliderValue: 50});\n      } else if (e === \"distributionPercent\") {\n        this.setState({sliderValue: 70});\n      } else if (e === \"labelServices\") {\n        this.setState({sliderValue: 80});\n      }\n      //document.getElementById(\"splitSlider\").value = this.state.sliderValue;\n      //console.log(this.myRef.current);\n      //React.findDOMNode(this.refs.sliderRef).value = this.state.sliderValue;\n      console.log(\"sliderValue: \" + this.state.sliderValue);\n      this.setState({recordDealSelected: e})\n      this.calculate();\n  }\n\n  buildRecordDealSelect() {\n      //console.log(\"Roles!\");\n      let royalty = {\n          id: 0,\n          name: \"Royalty\"\n      };\n      let netProfit = {\n          id: 1,\n          name: \"Net Profit\"\n      };\n      let distributionPercent = {\n          id: 2,\n          name: \"Distribution Percent\"\n      };\n      let labelServices = {\n          id: 3,\n          name: \"Label Services\"\n      }\n\n      let rls = [royalty, netProfit, distributionPercent, labelServices];\n      this.setState( {recordDeal: rls} );\n  }\n\n  toggleMe(index) {\n    this.state.providers[index].includeInCalculations = !this.state.providers[index].includeInCalculations;\n    //console.log(dsps[index].name);\n    //console.log(dsps[index].includeInCalculations);\n    this.calculate();\n  }\n\n  /// MATH STUFF /////\n  calculate() {\n      this.getPublisherShare();\n\n      console.log(\"calculating\");\n      let artistShare;\n      let labelShare;\n      // Why are there double semi-colons?\n                 //prob a typo\n      let totalMoneyToRecoupe = parseFloat(this.state.advance) + parseFloat(this.state.costs);\n      //console.log(totalMoneyToRecoupe)\n      let grossRevenue= this.state.streamNumber * this.weightedAverageOfSelected();\n      //console.log(\"grossRevenue: \" + grossRevenue)\n      //checkDSPs();\n      //console.log(estStreams.value * avgPayout);\n      //console.log(estStreams.value * weightedAverageOfSelected());\n      if (this.state.recordDealSelected === \"royalty\") {\n          // Artist Split\n          if((grossRevenue * (parseFloat(this.state.sliderValue)/100)) <= totalMoneyToRecoupe){\n            console.log(\"unrecouped\");\n            artistShare = 0;\n          } else {\n            artistShare = (grossRevenue * (parseFloat(this.state.sliderValue)/100)) - totalMoneyToRecoupe;\n          }\n          labelShare = grossRevenue * (1-(parseFloat(this.state.sliderValue)/100));\n\n      } else if (this.state.recordDealSelected === \"netProfit\" || this.state.recordDealSelected === \"distributionPercent\" || this.state.recordDealSelected === \"Distribution Fee\") {\n          //net profit deals are generally guaranteed 50/50, distribution are generally 70/30 artist/label\n          let profit = (grossRevenue - this.state.costs);\n          // Artist Split\n          if(((profit * (parseFloat(this.state.sliderValue)/100)) - parseFloat(this.state.advance)) < 0){\n            console.log(\"unrecouped\");\n            artistShare = 0;\n          } else {\n            artistShare = (profit * (parseFloat(this.state.sliderValue)/100)) - parseFloat(this.state.advance);\n          }\n          // Label Split Net Profit, Distributions\n          if(this.state.recordDealSelected === \"netProfit\" || this.state.recordDealSelected === \"distributionPercent\") {\n              if(profit < 0){\n                  labelShare = 0;\n              } else {\n                  labelShare = (profit * (1-(parseFloat(this.state.sliderValue)/100)));\n              }\n          } else labelShare = grossRevenue - artistShare;\n\n          /* Nik Label Share for Net Profit, %Distribution Deals\n          if(profit < 0){\n            labelShare = 0;\n          } else {\n            labelShare = (profit * (1-(parseFloat(artistDeal.value)/100)));\n          }\n          */\n\n      } else if (this.state.recordDealSelected === \"labelServices\") {\n          // Artist Split\n          if((grossRevenue * (parseFloat(this.state.sliderValue)/100)) <= totalMoneyToRecoupe){\n            console.log(\"unrecouped\");\n            artistShare = 0;\n          } else {\n            artistShare = (grossRevenue * (parseFloat(this.state.sliderValue)/100)) - totalMoneyToRecoupe;\n          }\n          labelShare = grossRevenue * (1-(parseFloat(this.state.sliderValue)/100)) + this.state.costs;//extra menu items would be factored into costs\n      }\n\n      console.log(\"grossRevenue: \" + grossRevenue)\n      console.log(\"totRecoupe: \" + totalMoneyToRecoupe)\n      console.log(\"writerEarnings: \" + artistShare)\n      console.log(\"publisherShare: \" + labelShare)\n\n      this.setState({grossRev: grossRevenue, totRecoupe: totalMoneyToRecoupe, writerEarnings: artistShare, publisherShare: labelShare});\n\n      this.getTotalEarnings(artistShare);\n\n  }\n\n  getPublisherShare() {\n      //console.log(\"avgPubPayout: \" + avgPubPayout)\n\n      let pubGrossRevenue = avgPubPayout * this.state.streamNumber;\n      let pubPerformanceRevenue = pubGrossRevenue * .5;\n      let pubMechanicalRevenue = pubGrossRevenue * .5;\n      let pubPROAdminFee = pubPerformanceRevenue * .165;\n      let pubMechanicalAdminFee = pubMechanicalRevenue * .15;\n      let pubMechanicalRecordFee = (pubMechanicalRevenue - pubMechanicalAdminFee) * .3;\n\n      let publisherPercentage;\n\n      if(this.state.publishingDealSelected === \"Full/Traditional\") {\n          publisherPercentage = 1.0;\n          this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n          this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n      } else if(this.state.publishingDealSelected === \"Co-Publishing\") {\n          publisherPercentage = 0.5;\n          this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n          this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n      } else if(this.state.publishingDealSelected === \"Admin Deal\") {\n          publisherPercentage = 0.1;\n          this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n          this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n      } else if(this.state.publishingDealSelected === \"No Deal\") {\n          publisherPercentage = 0.0;\n          this.setState({publisherShare: ((pubPerformanceRevenue - pubPROAdminFee) * .5) * publisherPercentage});\n          this.setState({writerEarnings: ((pubPerformanceRevenue - pubPROAdminFee) * .5) + (((pubPerformanceRevenue - pubPROAdminFee) * .5) * (1- publisherPercentage)) + (pubMechanicalRevenue - (pubMechanicalAdminFee + pubMechanicalRecordFee))});\n      }\n  }\n\n  weightedAverageOfSelected() {\n\n      let sum = 0.0;\n      for(let i=0; i < this.state.providers.length; i++) {\n        if(this.state.providers[i].includeInCalculations) {\n              sum += (this.state.providers[i].payoutPerStream * this.state.providers[i].marketShareStreams)\n          }\n      }\n      console.log(sum)\n      let sumOfWeights = 0.0;\n      for(let i=0;i < this.state.providers.length; i++) {\n        if(this.state.providers[i].includeInCalculations) {\n          sumOfWeights += this.state.providers[i].marketShareStreams\n        }\n      }\n      if(sumOfWeights <= 0.0) return 0.0\n      //console.log(sum)\n      console.log(sum/sumOfWeights);\n      return sum/sumOfWeights;\n  }\n\n  getTotalEarnings(artistShare) {\n      if(this.state.role === \"both\") {\n          this.setState({totalEarnings: artistShare + parseFloat(this.state.writerEarnings)});\n      } else if(this.state.role === \"artist\") {\n          this.setState({totalEarnings: artistShare});\n      } else if(this.state.role === \"writer\") {\n          this.setState({totalEarnings: this.state.writerEarnings});\n      }\n  }\n\n\n}\n\n\nexport default TestCompPage;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/NumberInput.js",["112","113","114"],"import React from \"react\";\nimport { render } from \"react-dom\";\nimport {TransitionMotion, spring } from 'react-motion';\nimport \"../stylesheets/NumberInput.css\";\n\nclass NumberInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: (props.locked && props.active) || false,\n      // FIX THIS VALUE TO HAVE INPUT BE TRUE... RN \"\" is so 1 is \"\" then 12 is \"1\"\n      value: props.value || \"\",\n      error: props.error || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n  componentDidUpdate() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state);\n    }\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({ value, error: 0 });\n  }\n\n  handleKeyPress(event) {\n    console.log(this.state.value)\n  }\n\n  render() {\n    const { active, value, error, label } = this.state;\n    const { predicted, locked } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) &&\n      \"active\"} ${locked && !active && \"locked\"}`;\n\n    return (\n      <div className={fieldClassName}>\n        {active &&\n          value &&\n          predicted &&\n          predicted.includes(value) && <p className=\"predicted\">{predicted}</p>}\n        <input\n          id={0}\n          type=\"text\"\n          value={value}\n          placeholder={label}\n          onChange={this.changeValue.bind(this)}\n          onKeyPress={this.handleKeyPress.bind(this)}\n          onFocus={() => !locked && this.setState({ active: true })}\n          onBlur={() => !locked && this.setState({ active: false })}\n        />\n        <label htmlFor={0} className={error && \"error\"}>\n          {error || label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default NumberInput;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/SmallText.js",[],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/SingleDropDown.js",["115","116"],"import React, { Component } from 'react';\nimport Select from 'react-select';\nimport styled from \"styled-components\";\n\nclass SingleDropDown extends React.Component {\n\n  state = {\n    selectedOption: null,\n  };\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n    //console.log('My state: ', this.state.selectedOption);\n  };\n\n\n  componentDidUpdate() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state);\n    }\n  }\n\n\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n      <Select\n      styles={{\n        menu: provided => ({ ...provided, zIndex: 10 })\n        }}\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={this.props.options}\n      />\n    );\n  }\n}\n\nexport default SingleDropDown;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/DspButton.js",["117"],"/* eslint-env browser, commonjs, jquery, es6 */\n\nimport React from 'react';\nimport '../stylesheets/DspButton.css';\nimport SmallText from './SmallText';\n\n\nclass DspButton extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      button: true\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(){\n    this.setState({\n      button:!this.state.button\n\n    })\n  }\n\n\n  componentDidUpdate() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state);\n    }\n  }\n\n  testButton(){\n    console.log(\"DSP - MAKE VALUE TOGGLE ON/OFF\")\n  }\n\n  render(){\n    return (\n    <div className=\"container\">\n      <button className={this.state.button ? \"buttonTrue\": \"buttonFalse\"}\n            onClick={() => {\n            this.handleClick();\n            }}>\n        {this.props.text}\n      </button>\n    </div>\n    )\n  }\n}\n\nexport default DspButton;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/ButtonGroup.js",[],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/SwitchButton.js",[],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/TitleText.js",[],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/MultiDropDown.js",["118"],"import React from 'react';\nimport Select from 'react-select';\n\n\nclass MultiDropDown extends React.Component {\n  state = {\n    selectedOption: null,\n  };\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  };\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n      <Select\n        defaultValue={this.props.options[0]}\n        isMulti\n        name=\"labelServices\"\n        options={this.props.options}\n        className=\"basic-multi-select\"\n        classNamePrefix=\"Select Services\"\n      />\n    );\n  }\n}\n\nexport default MultiDropDown;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/BarChart.js",["119","120"],"import React, { Component } from \"react\";\nimport Chart from 'react-apexcharts';\nimport RadialChart from './RadialChart.js';\n\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [{\n        name: 'From Recording',\n        data: [16255, 100558, 0]\n      }, {\n        name: 'From Writing',\n        data: [17371, 3191, 3700]\n      },{\n        name: 'From Advance',\n        data: [10000, 0, 0]\n      }\n\n    ],\n      options: {\n        chart: {\n          stacked: true,\n          toolbar: {\n            show: true\n          },\n          zoom: {\n            enabled: true\n          }\n        },\n        responsive: [{\n          breakpoint: 480,\n        }],\n        plotOptions: {\n          bar: {\n            horizontal: false,\n          },\n        },\n        xaxis: {\n          type: 'Who',\n          categories: ['Artist', 'Record Label', 'Publiser'],\n        },\n        legend: {\n          position: 'bottom',\n          horizontalAlign: 'right',\n        },\n        fill: {\n          opacity: 1\n        }\n      },\n    };\n  }\n\n  render() {\n    return (\n        <div id=\"chart\">\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"bar\"\n            height={400}\n            width={'95%'}/>\n        </div>\n    );\n  }\n\n}\n\nexport default BarChart;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/RadialChart.js",[],"/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/DealSplitSlider.js",["121","122","123"],"import React, { Component } from 'react'\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\n\nconst sliderStyle = {\n  position: 'relative',\n  width: '100%',\n  // height: 80,\n  // touchAction: 'none',\n}\n\nconst railStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: 10,\n  marginTop: 35,\n  borderRadius: 5,\n  backgroundColor: '#CBDCFC',\n  zIndex: 0\n}\n\nconst domain = [0, 100]\nconst defaultValues = [25]\n\nexport function Handle({\n  handle: { id, value, percent },\n  getHandleProps\n}) {\n  return (\n    <div\n      style={{\n        left: `${percent}%`,\n        position: 'absolute',\n        marginLeft: -15,\n        marginTop: 25,\n        zIndex: 2,\n        width: 30,\n        height: 30,\n        border: 0,\n        textAlign: 'center',\n        cursor: 'pointer',\n        borderRadius: '50%',\n        backgroundColor: '#1971ff',\n        color: '#333',\n      }}\n      {...getHandleProps(id)}\n    >\n      <div style={{fontSize: 14, marginTop: 35, fontWeight: '500'}}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nfunction Track({ source, target, getTrackProps }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 10,\n        zIndex: 1,\n        marginTop: 35,\n        backgroundColor: '#3665d6',\n        borderRadius: 5,\n        cursor: 'pointer',\n        left: `${source.percent}%`,\n        width: `${target.percent - source.percent}%`,\n      }}\n      {...getTrackProps() /* this will set up events if you want it to be clickeable (optional) */}\n    />\n  )\n}\n\n{/*function Tick({ tick, count }) {\n  return (\n    <div>\n      <div\n        style={{\n          position: 'absolute',\n          marginTop: 52,\n          marginLeft: -0.5,\n          width: 1,\n          height: 8,\n          backgroundColor: 'silver',\n          left: `${tick.percent}%`,\n        }}\n      />\n\n      <div\n        style={{\n          position: 'absolute',\n          marginTop: 60,\n          fontSize: 10,\n          textAlign: 'center',\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`,\n        }}\n      >\n        {tick.value}\n      </div>\n    </div>\n  )\n}\n\n// MOVE TO RENDER IF WANTED\n<Ticks count={1}>\n  {({ ticks }) => (\n    <div className=\"slider-ticks\">\n      {ticks.map(tick => (\n        <Tick key={tick.id} tick={tick} count={ticks.length} />\n      ))}\n    </div>\n  )}\n</Ticks> */}\n\n\nexport class DealSplitSlider extends Component {\n  state = {\n    values: defaultValues.slice(),\n    update: defaultValues.slice(),\n  }\n\n  componentDidUpdate() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state);\n    }\n  }\n\n  onUpdate = update => {\n    this.setState({ update })\n  }\n\n  onChange = values => {\n    this.setState({ values })\n  }\n\n  render() {\n    const {\n      state: { values, update },\n    } = this\n\n    return (\n      <div style={{ height: 70, width: '100%' }}>\n        <Slider\n          rootStyle={sliderStyle}\n          domain={domain}\n          onUpdate={this.onUpdate}\n          onChange={this.onChange}\n          values={values}\n          mode={1}\n          step={1}\n        >\n        <Rail>\n          {({ getRailProps }) => (<div style={railStyle} {...getRailProps()} />)}\n        </Rail>\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <div className=\"slider-handles\">\n                {handles.map(handle => (\n                  <Handle\n                    key={handle.id}\n                    handle={handle}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Handles>\n          <Tracks right={false}>\n            {({ tracks, getTrackProps }) => (\n              <div className=\"slider-tracks\">\n                {tracks.map(({ id, source, target }) => (\n                  <Track\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Tracks>\n        </Slider>\n      </div>\n    )\n  }\n}\n\nexport default DealSplitSlider;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/StreamSlider.js",["124"],"import React, { Component } from 'react'\nimport { Slider, Rail, Handles, Tracks } from 'react-compound-slider'\n\nconst sliderStyle = {\n  position: 'relative',\n  width: '100%',\n  height: 80,\n  // touchAction: 'none',\n}\n\nconst railStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: 10,\n  marginTop: 35,\n  borderRadius: 5,\n  backgroundColor: '#CBDCFC',\n}\n\nfunction GetMiddleValue(min, max) {\n  min = domain[0];\n  max = domain[1];\n  return (min+max)/2\n}\n\nfunction MaxNumb(){\n  return Math.floor(Math.random() * 1000000);\n}\n\n\nconst domain = [0, MaxNumb()]\nconst defaultValues = [GetMiddleValue()]\n\nexport function Handle({\n  handle: { id, value, percent },\n  getHandleProps\n}) {\n  return (\n    <div\n      style={{\n        left: `${percent}%`,\n        position: 'absolute',\n        marginLeft: -15,\n        marginTop: 25,\n        zIndex: 2,\n        width: 30,\n        height: 30,\n        border: 0,\n        textAlign: 'center',\n        cursor: 'pointer',\n        borderRadius: '50%',\n        backgroundColor: '#1971ff',\n        color: '#333',\n      }}\n      {...getHandleProps(id)}\n    >\n      <div style={{fontSize: 12, marginTop: 35 }}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nfunction Track({ source, target, getTrackProps }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 10,\n        zIndex: 1,\n        marginTop: 35,\n        backgroundColor: '#3665d6',\n        borderRadius: 5,\n        cursor: 'pointer',\n        left: `${source.percent}%`,\n        width: `${target.percent - source.percent}%`,\n      }}\n      {...getTrackProps() /* this will set up events if you want it to be clickeable (optional) */}\n    />\n  )\n}\n\n\nexport class StreamSlider extends Component {\n  state = {\n    values: defaultValues.slice(),\n    update: defaultValues.slice(),\n  }\n\n  onUpdate = update => {\n    this.setState({ update })\n  }\n\n  onChange = values => {\n    this.setState({ values })\n  }\n\n  render() {\n    const {\n      state: { values, update },\n    } = this\n\n    return (\n      <div style={{ height: 70, width: '100%' }}>\n        <Slider\n          rootStyle={sliderStyle}\n          domain={domain}\n          onUpdate={this.onUpdate}\n          onChange={this.onChange}\n          values={values}\n          mode={1}\n          step={1}\n        >\n        <Rail>\n          {({ getRailProps }) => (<div style={railStyle} {...getRailProps()} />)}\n        </Rail>\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <div className=\"slider-handles\">\n                {handles.map(handle => (\n                  <Handle\n                    key={handle.id}\n                    handle={handle}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Handles>\n          <Tracks right={false}>\n            {({ tracks, getTrackProps }) => (\n              <div className=\"slider-tracks\">\n                {tracks.map(({ id, source, target }) => (\n                  <Track\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Tracks>\n        </Slider>\n      </div>\n    )\n  }\n}\n\nexport default StreamSlider;\n","/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/ButtonGroupTest.js",["125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":20},{"ruleId":"130","severity":1,"message":"134","line":28,"column":7,"nodeType":"132","messageId":"133","endLine":28,"endColumn":28},{"ruleId":"130","severity":1,"message":"135","line":34,"column":7,"nodeType":"132","messageId":"133","endLine":34,"endColumn":27},{"ruleId":"130","severity":1,"message":"136","line":63,"column":7,"nodeType":"132","messageId":"133","endLine":63,"endColumn":9},{"ruleId":"137","severity":1,"message":"138","line":387,"column":104,"nodeType":"139","messageId":"140","endLine":387,"endColumn":106},{"ruleId":"137","severity":1,"message":"141","line":410,"column":25,"nodeType":"139","messageId":"140","endLine":410,"endColumn":27},{"ruleId":"137","severity":1,"message":"141","line":414,"column":25,"nodeType":"139","messageId":"140","endLine":414,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":425,"column":121,"nodeType":"139","messageId":"140","endLine":425,"endColumn":123},{"ruleId":"137","severity":1,"message":"138","line":432,"column":44,"nodeType":"139","messageId":"140","endLine":432,"endColumn":46},{"ruleId":"137","severity":1,"message":"138","line":432,"column":97,"nodeType":"139","messageId":"140","endLine":432,"endColumn":99},{"ruleId":"137","severity":1,"message":"138","line":439,"column":46,"nodeType":"139","messageId":"140","endLine":439,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":439,"column":101,"nodeType":"139","messageId":"140","endLine":439,"endColumn":103},{"ruleId":"137","severity":1,"message":"138","line":446,"column":117,"nodeType":"139","messageId":"140","endLine":446,"endColumn":119},{"ruleId":"137","severity":1,"message":"138","line":456,"column":119,"nodeType":"139","messageId":"140","endLine":456,"endColumn":121},{"ruleId":"142","severity":1,"message":"143","line":593,"column":7,"nodeType":"144","endLine":593,"endColumn":34},{"ruleId":"130","severity":1,"message":"145","line":10,"column":8,"nodeType":"132","messageId":"133","endLine":10,"endColumn":21},{"ruleId":"130","severity":1,"message":"135","line":37,"column":7,"nodeType":"132","messageId":"133","endLine":37,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":47,"column":1,"nodeType":"148","messageId":"149","endLine":53,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":356,"column":119,"nodeType":"139","messageId":"140","endLine":356,"endColumn":121},{"ruleId":"137","severity":1,"message":"138","line":364,"column":42,"nodeType":"139","messageId":"140","endLine":364,"endColumn":44},{"ruleId":"137","severity":1,"message":"138","line":364,"column":95,"nodeType":"139","messageId":"140","endLine":364,"endColumn":97},{"ruleId":"137","severity":1,"message":"138","line":372,"column":44,"nodeType":"139","messageId":"140","endLine":372,"endColumn":46},{"ruleId":"137","severity":1,"message":"138","line":372,"column":99,"nodeType":"139","messageId":"140","endLine":372,"endColumn":101},{"ruleId":"137","severity":1,"message":"138","line":380,"column":115,"nodeType":"139","messageId":"140","endLine":380,"endColumn":117},{"ruleId":"137","severity":1,"message":"138","line":391,"column":117,"nodeType":"139","messageId":"140","endLine":391,"endColumn":119},{"ruleId":"142","severity":1,"message":"143","line":522,"column":5,"nodeType":"144","endLine":522,"endColumn":32},{"ruleId":"130","severity":1,"message":"150","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"151","line":3,"column":9,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"152","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"130","severity":1,"message":"153","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"154","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":14},{"ruleId":"130","severity":1,"message":"155","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":17},{"ruleId":"130","severity":1,"message":"156","line":14,"column":13,"nodeType":"132","messageId":"133","endLine":14,"endColumn":27},{"ruleId":"130","severity":1,"message":"153","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"157","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":19},{"ruleId":"130","severity":1,"message":"158","line":2,"column":41,"nodeType":"132","messageId":"133","endLine":2,"endColumn":46},{"ruleId":"146","severity":1,"message":"147","line":73,"column":1,"nodeType":"148","messageId":"149","endLine":114,"endColumn":13},{"ruleId":"130","severity":1,"message":"159","line":139,"column":24,"nodeType":"132","messageId":"133","endLine":139,"endColumn":30},{"ruleId":"130","severity":1,"message":"159","line":100,"column":24,"nodeType":"132","messageId":"133","endLine":100,"endColumn":30},{"ruleId":"130","severity":1,"message":"160","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'TestCompPage' is defined but never used.","Identifier","unusedVar","'marketingSplitOptions' is assigned a value but never used.","'labelServicesOptions' is assigned a value but never used.","'ce' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'MultiDropDown' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'render' is defined but never used.","'TransitionMotion' is defined but never used.","'spring' is defined but never used.","'Component' is defined but never used.","'styled' is defined but never used.","'SmallText' is defined but never used.","'selectedOption' is assigned a value but never used.","'RadialChart' is defined but never used.","'Ticks' is defined but never used.","'update' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]