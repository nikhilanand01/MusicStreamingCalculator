{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/ButtonGroupCopy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nconst Tab = styled.button`\n  padding: 10px 30px;\n  cursor: pointer;\n  opacity: 0.6;\n  background: white;\n  border: 0;\n  outline: 0;\n  font-size: 18px;\n  font-weight: 500;\n  border-bottom: 2px solid transparent;\n  transition: ease border-bottom 250ms;\n  ${({\n  active\n}) => active && `\n    border-bottom: 2px solid black;\n    font-weight: bold;\n    opacity: 1;\n  `}\n`;\n_c = Tab;\n\nfunction TabGroupTestComp(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.types.map(type => {\n      // using props in child component and looping\n      return /*#__PURE__*/_jsxDEV(Tab, {\n        active: active === type,\n        onClick: () => {\n          setActive(type);\n        },\n        children: type.title\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = TabGroupTestComp;\nexport default function App() {\n  _s();\n\n  const [active, setActive] = useState(types[0]);\n  return /*#__PURE__*/_jsxDEV(TabGroupTestComp, {\n    types: this.props.types\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this) //This is how i'm passing props in parent component\n  ;\n}\n\n_s(App, \"9c8rs/m2BfbrEewVsOzi9z6dNX4=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Tab\");\n$RefreshReg$(_c2, \"TabGroupTestComp\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/ButtonGroupCopy.js"],"names":["React","useState","styled","Tab","button","active","TabGroupTestComp","props","types","map","type","setActive","title","App"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,GAAG,GAAGD,MAAM,CAACE,MAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,MAAM,IACL;AACL;AACA;AACA;AACA,GAAI;AACJ,CAlBA;KAAMF,G;;AAqBN,SAASG,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,sBACI;AAAA,cACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAI;AAAE;AACvB,0BACI,QAAC,GAAD;AAEE,QAAA,MAAM,EAAEL,MAAM,KAAKK,IAFrB;AAGE,QAAA,OAAO,EAAE,MAAM;AAACC,UAAAA,SAAS,CAACD,IAAD,CAAT;AAAiB,SAHnC;AAAA,kBAIGA,IAAI,CAACE;AAJR,SACOF,IADP;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcD;;MAfQJ,gB;AAmBT,eAAe,SAASO,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACR,MAAD,EAASM,SAAT,IAAsBV,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAApC;AACA,sBACI,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,UADJ,CACiD;AADjD;AAGD;;GALuBK,G;;MAAAA,G","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n\nconst Tab = styled.button`\n  padding: 10px 30px;\n  cursor: pointer;\n  opacity: 0.6;\n  background: white;\n  border: 0;\n  outline: 0;\n  font-size: 18px;\n  font-weight: 500;\n  border-bottom: 2px solid transparent;\n  transition: ease border-bottom 250ms;\n  ${({ active }) =>\n    active &&\n    `\n    border-bottom: 2px solid black;\n    font-weight: bold;\n    opacity: 1;\n  `}\n`;\n\n\nfunction TabGroupTestComp(props) {\n  return (\n      <div>\n          {props.types.map(type => { // using props in child component and looping\n              return (\n                  <Tab\n                    key={type}\n                    active={active === type}\n                    onClick={() => {setActive(type);}}>\n                    {type.title}\n                  </Tab>\n              )\n          })}\n      </div>\n  );\n}\n\n\n\nexport default function App() {\n  const [active, setActive] = useState(types[0]);\n  return (\n      <TabGroupTestComp types={this.props.types}/> //This is how i'm passing props in parent component\n  );\n}\n"]},"metadata":{},"sourceType":"module"}