{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/StreamSlider.js\";\nimport React, { Component } from 'react';\nimport { Slider, Rail, Handles, Tracks } from 'react-compound-slider';\nconst sliderStyle = {\n  position: 'relative',\n  width: '40%',\n  height: 80 // touchAction: 'none',\n\n};\nconst railStyle = {\n  // position: 'absolute',\n  width: '100%',\n  height: 10,\n  marginTop: 35,\n  borderRadius: 5,\n  backgroundColor: '#d5eddc'\n};\n\nfunction GetMiddleValue(min, max) {\n  min = domain[0];\n  max = domain[1];\n  return (min + max) / 2;\n}\n\n_c = GetMiddleValue;\nconst domain = [0, 100];\nconst defaultValues = [GetMiddleValue()];\nexport function Handle({\n  handle: {\n    id,\n    value,\n    percent\n  },\n  getHandleProps\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      left: `${percent}%`,\n      position: 'absolute',\n      marginLeft: -15,\n      marginTop: 25,\n      zIndex: 2,\n      width: 30,\n      height: 30,\n      border: 0,\n      textAlign: 'center',\n      cursor: 'pointer',\n      borderRadius: '50%',\n      backgroundColor: '#2b753f',\n      color: '#333'\n    },\n    ...getHandleProps(id),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 11,\n        marginTop: -35\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Handle;\n\nfunction Track({\n  source,\n  target,\n  getTrackProps\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      height: 10,\n      zIndex: 1,\n      marginTop: 35,\n      backgroundColor: '#49cc6c',\n      borderRadius: 5,\n      cursor: 'pointer',\n      left: `${source.percent}%`,\n      width: `${target.percent - source.percent}%`\n    },\n    ...getTrackProps()\n    /* this will set up events if you want it to be clickeable (optional) */\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Track;\nexport class StreamSlider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: defaultValues.slice(),\n      update: defaultValues.slice()\n    };\n\n    this.onUpdate = update => {\n      this.setState({\n        update\n      });\n    };\n\n    this.onChange = values => {\n      this.setState({\n        values\n      });\n    };\n  }\n\n  render() {\n    const {\n      state: {\n        values,\n        update\n      }\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 120,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        rootStyle: sliderStyle,\n        domain: domain,\n        onUpdate: this.onUpdate,\n        onChange: this.onChange,\n        values: values,\n        mode: 1,\n        step: 1,\n        children: [/*#__PURE__*/_jsxDEV(Rail, {\n          children: ({\n            getRailProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: railStyle,\n            ...getRailProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Handles, {\n          children: ({\n            handles,\n            getHandleProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider-handles\",\n            children: handles.map(handle => /*#__PURE__*/_jsxDEV(Handle, {\n              handle: handle,\n              getHandleProps: getHandleProps\n            }, handle.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tracks, {\n          right: false,\n          children: ({\n            tracks,\n            getTrackProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider-tracks\",\n            children: tracks.map(({\n              id,\n              source,\n              target\n            }) => /*#__PURE__*/_jsxDEV(Track, {\n              source: source,\n              target: target,\n              getTrackProps: getTrackProps\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default StreamSlider;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetMiddleValue\");\n$RefreshReg$(_c2, \"Handle\");\n$RefreshReg$(_c3, \"Track\");","map":{"version":3,"sources":["/Users/nikhil/Desktop/MusicStreamingCalculator/src/components/StreamSlider.js"],"names":["React","Component","Slider","Rail","Handles","Tracks","sliderStyle","position","width","height","railStyle","marginTop","borderRadius","backgroundColor","GetMiddleValue","min","max","domain","defaultValues","Handle","handle","id","value","percent","getHandleProps","left","marginLeft","zIndex","border","textAlign","cursor","color","fontSize","Track","source","target","getTrackProps","StreamSlider","state","values","slice","update","onUpdate","setState","onChange","render","getRailProps","handles","map","tracks"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Slider, Rail, Handles, Tracks } from 'react-compound-slider'\n\nconst sliderStyle = {\n  position: 'relative',\n  width: '40%',\n  height: 80,\n  // touchAction: 'none',\n}\n\nconst railStyle = {\n  // position: 'absolute',\n  width: '100%',\n  height: 10,\n  marginTop: 35,\n  borderRadius: 5,\n  backgroundColor: '#d5eddc',\n}\n\nfunction GetMiddleValue(min, max) {\n  min = domain[0];\n  max = domain[1];\n  return  (min+max)/2\n}\n\n\nconst domain = [0, 100]\nconst defaultValues = [GetMiddleValue()]\n\nexport function Handle({\n  handle: { id, value, percent },\n  getHandleProps\n}) {\n  return (\n    <div\n      style={{\n        left: `${percent}%`,\n        position: 'absolute',\n        marginLeft: -15,\n        marginTop: 25,\n        zIndex: 2,\n        width: 30,\n        height: 30,\n        border: 0,\n        textAlign: 'center',\n        cursor: 'pointer',\n        borderRadius: '50%',\n        backgroundColor: '#2b753f',\n        color: '#333',\n      }}\n      {...getHandleProps(id)}\n    >\n      <div style={{fontSize: 11, marginTop: -35 }}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nfunction Track({ source, target, getTrackProps }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 10,\n        zIndex: 1,\n        marginTop: 35,\n        backgroundColor: '#49cc6c',\n        borderRadius: 5,\n        cursor: 'pointer',\n        left: `${source.percent}%`,\n        width: `${target.percent - source.percent}%`,\n      }}\n      {...getTrackProps() /* this will set up events if you want it to be clickeable (optional) */}\n    />\n  )\n}\n\n\nexport class StreamSlider extends Component {\n  state = {\n    values: defaultValues.slice(),\n    update: defaultValues.slice(),\n  }\n\n  onUpdate = update => {\n    this.setState({ update })\n  }\n\n  onChange = values => {\n    this.setState({ values })\n  }\n\n  render() {\n    const {\n      state: { values, update },\n    } = this\n\n    return (\n      <div style={{ height: 120, width: '100%' }}>\n        <Slider\n          rootStyle={sliderStyle}\n          domain={domain}\n          onUpdate={this.onUpdate}\n          onChange={this.onChange}\n          values={values}\n          mode={1}\n          step={1}\n        >\n        <Rail>\n          {({ getRailProps }) => (<div style={railStyle} {...getRailProps()} />)}\n        </Rail>\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <div className=\"slider-handles\">\n                {handles.map(handle => (\n                  <Handle\n                    key={handle.id}\n                    handle={handle}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Handles>\n          <Tracks right={false}>\n            {({ tracks, getTrackProps }) => (\n              <div className=\"slider-tracks\">\n                {tracks.map(({ id, source, target }) => (\n                  <Track\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Tracks>\n        </Slider>\n      </div>\n    )\n  }\n}\n\nexport default StreamSlider;\n"]},"metadata":{},"sourceType":"module"}