{"ast":null,"code":"import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nimport TextButton from './components/TextButton.js';\nconst ce = React.createElement;\n\nclass CalcPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streamNumber: null,\n      role: null,\n      recordDeal: [],\n      publishDeal: [],\n      sliderValue: null,\n      recordDealSelected: null,\n      publishingDealSelected: null,\n      advance: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.buildRecordDealSelect();\n    this.handleRoleButton(\"Writer & Artist\");\n    this.buildPublishingDealSelect();\n    this.setSliderValue(50);\n    this.setInitialStates();\n  }\n\n  render() {\n    return ce('div', null, ce('h2', {\n      className: \"font\"\n    }, 'Welcome to the Revenue Calculator'), ce('input', {\n      id: \"estStreams\",\n      type: \"text\",\n      placeholder: \"Enter Est. Streams\",\n      onChange: e => this.changeStreams(e)\n    }), ce('br'), ce('text', null, 'Role: '),\n    /*ce('select', {onChange: e => this.handleRoleSelect(e)},\n        this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n        ),*/\n    ce('button', {\n      onClick: e => this.handleRoleButton(\"artist\")\n    }, 'Artist Only'), ce('button', {\n      onClick: e => this.handleRoleButton(\"writer\")\n    }, 'Writer Only'), ce('button', {\n      onClick: e => this.handleRoleButton(\"both\")\n    }, 'Writer & Artist'), ce('br'), ce('text', null, 'Record Deal Type: '), ce('select', {\n      onChange: e => this.handleRecDealSelect(e)\n    }, this.state.recordDeal.map(deal => ce('option', {\n      key: deal.id\n    }, deal.name))), ce('br'), ce('text', null, 'Publishing Deal Type: '), ce('select', {\n      onChange: e => this.handlePublishingDealSelect(e)\n    }, this.state.publishDeal.map(deal => ce('option', {\n      key: deal.id\n    }, deal.name))), ce('br'), ce('text', null, 'Deal Split: '), ce('input', {\n      type: 'range',\n      min: '1',\n      max: '100',\n      id: 'splitSlider',\n      onChange: e => this.updateSlider(e)\n    }), ce('text', null, 'Guaranteed Income: '), ce('input', {\n      id: \"fromAdvance\",\n      placeholder: \"From Advance\"\n    }));\n  }\n\n  setInitialStates() {\n    this.setState({\n      streamNumber: 1000000000,\n      role: \"Writer & Artist\",\n      recordDealDelected: \"Royalty\",\n      publishingDealSelected: \"Full/Traditional\",\n      advance: 0\n    });\n  }\n\n  changeStreams(e) {\n    console.log(\"changed streams to: \" + e.target.value);\n    this.setState({\n      streamNumber: e.target.value\n    });\n  }\n\n  setSliderValue(val) {\n    this.setState({\n      sliderValue: val\n    });\n  }\n\n  updateSlider(e) {\n    console.log(e.target.value); //val = document.getElementById(\"splitSlider\").value()\n\n    this.setState({\n      sliderValue: e.target.value\n    });\n  }\n\n  buildPublishingDealSelect() {\n    let fullTrad = {\n      id: 0,\n      name: \"Full/Traditional\"\n    };\n    let coPublishing = {\n      id: 1,\n      name: \"Co-Publishing\"\n    };\n    let adminDeal = {\n      id: 2,\n      name: \"Admin Deal\"\n    };\n    let noDeal = {\n      id: 3,\n      name: \"No Deal\"\n    };\n    let deals = [fullTrad, coPublishing, adminDeal, noDeal];\n    this.setState({\n      publishDeal: deals\n    });\n  }\n\n  handlePublishingDealSelect(e) {\n    console.log(e.target.value);\n    this.setState({\n      publishingDealSelected: e.target.value\n    });\n  }\n\n  handleRoleButton(which) {\n    console.log(which);\n    this.setState({\n      role: which\n    });\n  } // handleRecDealSelect(e)\n\n\n  handleRecDealSelect(e) {\n    //console.log(\"selecting Roles\");\n    //console.log(e.target.value);\n    this.setState({\n      recordDealSelected: e.target.value\n    });\n  }\n\n  buildRecordDealSelect() {\n    //console.log(\"Roles!\");\n    let royalty = {\n      id: 0,\n      name: \"Royalty\"\n    };\n    let netProfit = {\n      id: 1,\n      name: \"Net Profit\"\n    };\n    let distributionPercent = {\n      id: 2,\n      name: \"Distribution Percent\"\n    };\n    let labelServices = {\n      id: 3,\n      name: \"Label Services\"\n    };\n    let rls = [royalty, netProfit, distributionPercent, labelServices];\n    this.setState({\n      recordDeal: rls\n    });\n  }\n\n}\n\nexport default CalcPage;","map":{"version":3,"sources":["/Users/nikhil/Desktop/MusicStreamingCalculator/src/CalcPage.js"],"names":["React","SmallText","TextButton","ce","createElement","CalcPage","Component","constructor","props","state","streamNumber","role","recordDeal","publishDeal","sliderValue","recordDealSelected","publishingDealSelected","advance","componentDidMount","console","log","buildRecordDealSelect","handleRoleButton","buildPublishingDealSelect","setSliderValue","setInitialStates","render","className","id","type","placeholder","onChange","e","changeStreams","onClick","handleRecDealSelect","map","deal","key","name","handlePublishingDealSelect","min","max","updateSlider","setState","recordDealDelected","target","value","val","fullTrad","coPublishing","adminDeal","noDeal","deals","which","royalty","netProfit","distributionPercent","labelServices","rls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nimport TextButton from './components/TextButton.js';\n\nconst ce = React.createElement;\n\nclass CalcPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            streamNumber: null,\n            role: null,\n            recordDeal: [],\n            publishDeal: [],\n            sliderValue: null,\n            recordDealSelected: null,\n            publishingDealSelected: null,\n            advance: null\n        };\n\n    }\n\n    componentDidMount() {\n        console.log(\"mounted\");\n        this.buildRecordDealSelect();\n        this.handleRoleButton(\"Writer & Artist\");\n        this.buildPublishingDealSelect();\n        this.setSliderValue(50);\n        this.setInitialStates();\n    }\n\n    render() {\n      return ce('div', null,\n        ce('h2', {className: \"font\"}, 'Welcome to the Revenue Calculator'),\n            ce('input', {id: \"estStreams\", type: \"text\", placeholder: \"Enter Est. Streams\", onChange: e => this.changeStreams(e)}),\n            ce('br'),\n            ce('text', null, 'Role: '),\n            /*ce('select', {onChange: e => this.handleRoleSelect(e)},\n                this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n                ),*/\n            ce('button', {onClick: e => this.handleRoleButton(\"artist\")}, 'Artist Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"writer\")}, 'Writer Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"both\")}, 'Writer & Artist'),\n            ce('br'),\n            ce('text', null, 'Record Deal Type: '),\n            ce('select', {onChange: e => this.handleRecDealSelect(e)},\n                this.state.recordDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Publishing Deal Type: '),\n            ce('select', {onChange: e => this.handlePublishingDealSelect(e)},\n                this.state.publishDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Deal Split: '),\n            ce('input', {type: 'range', min: '1', max: '100', id: 'splitSlider', onChange: e => this.updateSlider(e)}),\n            ce('text', null, 'Guaranteed Income: '),\n            ce('input', {id: \"fromAdvance\", placeholder: \"From Advance\"})\n\n        )\n\n    }\n\n    setInitialStates() {\n        this.setState({streamNumber: 1000000000,role: \"Writer & Artist\", recordDealDelected: \"Royalty\", publishingDealSelected: \"Full/Traditional\", advance: 0})\n    }\n\n    changeStreams(e) {\n        console.log(\"changed streams to: \" + e.target.value);\n        this.setState({streamNumber: e.target.value});\n    }\n\n    setSliderValue(val) {\n        this.setState( {sliderValue: val})\n    }\n    updateSlider(e) {\n        console.log(e.target.value)\n        //val = document.getElementById(\"splitSlider\").value()\n        this.setState( {sliderValue: e.target.value})\n    }\n\n    buildPublishingDealSelect() {\n        let fullTrad = {\n            id: 0,\n            name: \"Full/Traditional\"\n        }\n        let coPublishing = {\n            id: 1,\n            name: \"Co-Publishing\"\n        }\n        let adminDeal = {\n            id: 2,\n            name: \"Admin Deal\"\n        }\n        let noDeal = {\n            id: 3,\n            name: \"No Deal\"\n        }\n        let deals = [fullTrad, coPublishing, adminDeal, noDeal]\n        this.setState( {publishDeal: deals})\n    }\n\n    handlePublishingDealSelect(e) {\n        console.log(e.target.value);\n        this.setState({publishingDealSelected: e.target.value})\n    }\n\n\n    handleRoleButton(which) {\n        console.log(which);\n        this.setState({role: which})\n    }\n\n   // handleRecDealSelect(e)\n\n    handleRecDealSelect(e) {\n        //console.log(\"selecting Roles\");\n        //console.log(e.target.value);\n        this.setState({recordDealSelected: e.target.value})\n    }\n\n    buildRecordDealSelect() {\n        //console.log(\"Roles!\");\n        let royalty = {\n            id: 0,\n            name: \"Royalty\"\n        };\n        let netProfit = {\n            id: 1,\n            name: \"Net Profit\"\n        };\n        let distributionPercent = {\n            id: 2,\n            name: \"Distribution Percent\"\n        };\n        let labelServices = {\n            id: 3,\n            name: \"Label Services\"\n        }\n\n        let rls = [royalty, netProfit, distributionPercent, labelServices];\n        this.setState( {recordDeal: rls} );\n    }\n}\n\n\nexport default CalcPage;\n"]},"metadata":{},"sourceType":"module"}