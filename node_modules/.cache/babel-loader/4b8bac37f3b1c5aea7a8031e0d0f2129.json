{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nikhil/Desktop/MusicStreamingCalculator/src/TestCompPage.js\";\nimport React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nimport TextButton from './components/TextButton.js';\nconst ce = React.createElement;\n\nclass TestCompPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streamNumber: null,\n      role: null,\n      recordDeal: [],\n      publishDeal: [],\n      sliderValue: null,\n      recordDealSelected: null,\n      publishingDealSelected: null,\n      advance: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.buildRecordDealSelect();\n    this.handleRoleButton(\"Writer & Artist\");\n    this.buildPublishingDealSelect();\n    this.setSliderValue(50);\n    this.setInitialStates();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /*\n      ce('h2', {className: \"font\"}, 'Welcome to the Revenue Calculator'),\n         ce('input', {id: \"estStreams\", type: \"text\", placeholder: \"Enter Est. Streams\", onChange: e => this.changeStreams(e)}),\n         ce('br'),\n         ce('text', null, 'Role: '),\n          //ce('select', {onChange: e => this.handleRoleSelect(e)},\n           //  this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n             //),\n          ce('button', {onClick: e => this.handleRoleButton(\"artist\")}, 'Artist Only'),\n         ce('button', {onClick: e => this.handleRoleButton(\"writer\")}, 'Writer Only'),\n         ce('button', {onClick: e => this.handleRoleButton(\"both\")}, 'Writer & Artist'),\n         ce('br'),\n         ce('text', null, 'Record Deal Type: '),\n         ce('select', {onChange: e => this.handleRecDealSelect(e)},\n             this.state.recordDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n             ),\n         ce('br'),\n         ce('text', null, 'Publishing Deal Type: '),\n         ce('select', {onChange: e => this.handlePublishingDealSelect(e)},\n             this.state.publishDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n             ),\n         ce('br'),\n         ce('text', null, 'Deal Split: '),\n         ce('input', {type: 'range', min: '1', max: '100', id: 'splitSlider', onChange: e => this.updateSlider(e)}),\n         ce('text', null, 'Guaranteed Income: '),\n         ce('input', {id: \"fromAdvance\", placeholder: \"From Advance\"}) */\n      _jsxDEV(TextButton, {\n        buttonText: \"Test Button\",\n        style: {\n          textAlign: 'center'\n        },\n        buttonStyle: {\n          marginRight: '15px'\n        },\n        onClick: () => console.log(\"WORKED\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    );\n  }\n\n  setInitialStates() {\n    this.setState({\n      streamNumber: 1000000000,\n      role: \"Writer & Artist\",\n      recordDealDelected: \"Royalty\",\n      publishingDealSelected: \"Full/Traditional\",\n      advance: 0\n    });\n  }\n\n  changeStreams(e) {\n    console.log(\"changed streams to: \" + e.target.value);\n    this.setState({\n      streamNumber: e.target.value\n    });\n  }\n\n  setSliderValue(val) {\n    this.setState({\n      sliderValue: val\n    });\n  }\n\n  updateSlider(e) {\n    console.log(e.target.value); //val = document.getElementById(\"splitSlider\").value()\n\n    this.setState({\n      sliderValue: e.target.value\n    });\n  }\n\n  buildPublishingDealSelect() {\n    let fullTrad = {\n      id: 0,\n      name: \"Full/Traditional\"\n    };\n    let coPublishing = {\n      id: 1,\n      name: \"Co-Publishing\"\n    };\n    let adminDeal = {\n      id: 2,\n      name: \"Admin Deal\"\n    };\n    let noDeal = {\n      id: 3,\n      name: \"No Deal\"\n    };\n    let deals = [fullTrad, coPublishing, adminDeal, noDeal];\n    this.setState({\n      publishDeal: deals\n    });\n  }\n\n  handlePublishingDealSelect(e) {\n    console.log(e.target.value);\n    this.setState({\n      publishingDealSelected: e.target.value\n    });\n  }\n\n  handleRoleButton(which) {\n    console.log(which);\n    this.setState({\n      role: which\n    });\n  } // handleRecDealSelect(e)\n\n\n  handleRecDealSelect(e) {\n    //console.log(\"selecting Roles\");\n    //console.log(e.target.value);\n    this.setState({\n      recordDealSelected: e.target.value\n    });\n  }\n\n  buildRecordDealSelect() {\n    //console.log(\"Roles!\");\n    let royalty = {\n      id: 0,\n      name: \"Royalty\"\n    };\n    let netProfit = {\n      id: 1,\n      name: \"Net Profit\"\n    };\n    let distributionPercent = {\n      id: 2,\n      name: \"Distribution Percent\"\n    };\n    let labelServices = {\n      id: 3,\n      name: \"Label Services\"\n    };\n    let rls = [royalty, netProfit, distributionPercent, labelServices];\n    this.setState({\n      recordDeal: rls\n    });\n  }\n\n}\n\nexport default TestCompPage;","map":{"version":3,"sources":["/Users/nikhil/Desktop/MusicStreamingCalculator/src/TestCompPage.js"],"names":["React","SmallText","TextButton","ce","createElement","TestCompPage","Component","constructor","props","state","streamNumber","role","recordDeal","publishDeal","sliderValue","recordDealSelected","publishingDealSelected","advance","componentDidMount","console","log","buildRecordDealSelect","handleRoleButton","buildPublishingDealSelect","setSliderValue","setInitialStates","render","textAlign","marginRight","setState","recordDealDelected","changeStreams","e","target","value","val","updateSlider","fullTrad","id","name","coPublishing","adminDeal","noDeal","deals","handlePublishingDealSelect","which","handleRecDealSelect","royalty","netProfit","distributionPercent","labelServices","rls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nimport TextButton from './components/TextButton.js';\n\nconst ce = React.createElement;\n\nclass TestCompPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            streamNumber: null,\n            role: null,\n            recordDeal: [],\n            publishDeal: [],\n            sliderValue: null,\n            recordDealSelected: null,\n            publishingDealSelected: null,\n            advance: null\n        };\n\n    }\n\n    componentDidMount() {\n        console.log(\"mounted\");\n        this.buildRecordDealSelect();\n        this.handleRoleButton(\"Writer & Artist\");\n        this.buildPublishingDealSelect();\n        this.setSliderValue(50);\n        this.setInitialStates();\n    }\n\n    render() {\n      return (\n         /*\n         ce('h2', {className: \"font\"}, 'Welcome to the Revenue Calculator'),\n            ce('input', {id: \"estStreams\", type: \"text\", placeholder: \"Enter Est. Streams\", onChange: e => this.changeStreams(e)}),\n            ce('br'),\n            ce('text', null, 'Role: '),\n\n            //ce('select', {onChange: e => this.handleRoleSelect(e)},\n              //  this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n                //),\n\n            ce('button', {onClick: e => this.handleRoleButton(\"artist\")}, 'Artist Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"writer\")}, 'Writer Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"both\")}, 'Writer & Artist'),\n            ce('br'),\n            ce('text', null, 'Record Deal Type: '),\n            ce('select', {onChange: e => this.handleRecDealSelect(e)},\n                this.state.recordDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Publishing Deal Type: '),\n            ce('select', {onChange: e => this.handlePublishingDealSelect(e)},\n                this.state.publishDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Deal Split: '),\n            ce('input', {type: 'range', min: '1', max: '100', id: 'splitSlider', onChange: e => this.updateSlider(e)}),\n            ce('text', null, 'Guaranteed Income: '),\n            ce('input', {id: \"fromAdvance\", placeholder: \"From Advance\"}) */\n        <TextButton buttonText=\"Test Button\" style={{ textAlign: 'center' }} buttonStyle={{ marginRight: '15px' }} onClick={() => console.log(\"WORKED\")} />\n        )\n\n    }\n\n    setInitialStates() {\n        this.setState({streamNumber: 1000000000,role: \"Writer & Artist\", recordDealDelected: \"Royalty\", publishingDealSelected: \"Full/Traditional\", advance: 0})\n    }\n\n    changeStreams(e) {\n        console.log(\"changed streams to: \" + e.target.value);\n        this.setState({streamNumber: e.target.value});\n    }\n\n    setSliderValue(val) {\n        this.setState( {sliderValue: val})\n    }\n    updateSlider(e) {\n        console.log(e.target.value)\n        //val = document.getElementById(\"splitSlider\").value()\n        this.setState( {sliderValue: e.target.value})\n    }\n\n    buildPublishingDealSelect() {\n        let fullTrad = {\n            id: 0,\n            name: \"Full/Traditional\"\n        }\n        let coPublishing = {\n            id: 1,\n            name: \"Co-Publishing\"\n        }\n        let adminDeal = {\n            id: 2,\n            name: \"Admin Deal\"\n        }\n        let noDeal = {\n            id: 3,\n            name: \"No Deal\"\n        }\n        let deals = [fullTrad, coPublishing, adminDeal, noDeal]\n        this.setState( {publishDeal: deals})\n    }\n\n    handlePublishingDealSelect(e) {\n        console.log(e.target.value);\n        this.setState({publishingDealSelected: e.target.value})\n    }\n\n\n    handleRoleButton(which) {\n        console.log(which);\n        this.setState({role: which})\n    }\n\n   // handleRecDealSelect(e)\n\n    handleRecDealSelect(e) {\n        //console.log(\"selecting Roles\");\n        //console.log(e.target.value);\n        this.setState({recordDealSelected: e.target.value})\n    }\n\n    buildRecordDealSelect() {\n        //console.log(\"Roles!\");\n        let royalty = {\n            id: 0,\n            name: \"Royalty\"\n        };\n        let netProfit = {\n            id: 1,\n            name: \"Net Profit\"\n        };\n        let distributionPercent = {\n            id: 2,\n            name: \"Distribution Percent\"\n        };\n        let labelServices = {\n            id: 3,\n            name: \"Label Services\"\n        }\n\n        let rls = [royalty, netProfit, distributionPercent, labelServices];\n        this.setState( {recordDeal: rls} );\n    }\n}\n\n\nexport default TestCompPage;\n"]},"metadata":{},"sourceType":"module"}