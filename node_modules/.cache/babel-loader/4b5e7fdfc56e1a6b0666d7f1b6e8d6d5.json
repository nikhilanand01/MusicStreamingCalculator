{"ast":null,"code":"import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nconst ce = React.createElement; //average / approx payout for publishing for stream\n\nconst avgPubPayout = 0.0007174565191; //handling dsps\n\nlet spotify = {\n  name: \"Spotify\",\n  payoutPerStream: 0.00331,\n  marketShareStreams: .2922,\n  marketShareDollars: .4893,\n  includeInCalculations: true\n};\nlet apple = {\n  name: \"Apple Music\",\n  payoutPerStream: 0.00495,\n  marketShareStreams: .0995,\n  marketShareDollars: .2497,\n  includeInCalculations: true\n};\nlet youtube = {\n  name: \"Youtube Content ld\",\n  payoutPerStream: 0.00028,\n  marketShareStreams: .4858,\n  marketShareDollars: .0699,\n  includeInCalculations: true\n};\nlet amazon = {\n  name: \"Amazon Unlimited\",\n  payoutPerStream: 0.01175,\n  marketShareStreams: .0068,\n  marketShareDollars: .0404,\n  includeInCalculations: true\n};\nlet google = {\n  name: \"Google Play\",\n  payoutPerStream: 0.00543,\n  marketShareStreams: .0112,\n  marketShareDollars: .0308,\n  includeInCalculations: true\n};\nlet pandora = {\n  name: \"Pandora\",\n  payoutPerStream: 0.00155,\n  marketShareStreams: .0386,\n  marketShareDollars: .0303,\n  includeInCalculations: true\n};\nlet deezer = {\n  name: \"Deezer\",\n  payoutPerStream: 0.00567,\n  marketShareStreams: .0091,\n  marketShareDollars: .026,\n  includeInCalculations: true\n};\nlet amazonDig = {\n  name: \"Amazon Digital Services\",\n  payoutPerStream: 0.00395,\n  marketShareStreams: .0095,\n  marketShareDollars: .019,\n  includeInCalculations: true\n};\nlet tidal = {\n  name: \"TIDAL\",\n  payoutPerStream: 0.00927,\n  marketShareStreams: 0.0021,\n  marketShareDollars: 0.0098,\n  includeInCalculations: true\n};\nlet others = {\n  name: \"Napster / Rhapsody\",\n  payoutPerStream: 0.0111,\n  marketShareStreams: 0.0014,\n  marketShareDollars: 0.0080,\n  includeInCalculations: true\n};\nlet dsps = [spotify, apple, youtube, amazon, google, pandora, deezer, amazonDig, tidal, others];\n\nfunction toggleMe(index) {\n  dsps[index].includeInCalculations = !dsps[index].includeInCalculations; //console.log(dsps[index].name);\n  //console.log(dsps[index].includeInCalculations);\n}\n\nclass CalcPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streamNumber: null,\n      role: null,\n      recordDeal: [],\n      publishDeal: [],\n      sliderValue: null,\n      recordDealSelected: null,\n      publishingDealSelected: null,\n      advance: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.buildRecordDealSelect();\n    this.handleRoleButton(\"Writer & Artist\");\n    this.buildPublishingDealSelect();\n    this.setSliderValue(50);\n    this.setInitialStates();\n  }\n\n  render() {\n    return ce('div', null, ce('h2', {\n      className: \"font\"\n    }, 'Welcome to the Revenue Calculator'), ce('input', {\n      id: \"estStreams\",\n      type: \"text\",\n      placeholder: \"Enter Est. Streams\",\n      onChange: e => this.changeStreams(e)\n    }), ce('br'), ce('text', null, 'Role: '),\n    /*ce('select', {onChange: e => this.handleRoleSelect(e)}, \n        this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n        ),*/\n    ce('button', {\n      onClick: e => this.handleRoleButton(\"artist\")\n    }, 'Artist Only'), ce('button', {\n      onClick: e => this.handleRoleButton(\"writer\")\n    }, 'Writer Only'), ce('button', {\n      onClick: e => this.handleRoleButton(\"both\")\n    }, 'Writer & Artist'), ce('br'), ce('text', null, 'Record Deal Type: '), ce('select', {\n      onChange: e => this.handleRecDealSelect(e)\n    }, this.state.recordDeal.map(deal => ce('option', {\n      key: deal.id\n    }, deal.name))), ce('br'), ce('text', null, 'Publishing Deal Type: '), ce('select', {\n      onChange: e => this.handlePublishingDealSelect(e)\n    }, this.state.publishDeal.map(deal => ce('option', {\n      key: deal.id\n    }, deal.name))), ce('br'), ce('text', null, 'Deal Split: '), ce('input', {\n      type: 'range',\n      min: '1',\n      max: '100',\n      id: 'splitSlider',\n      onChange: e => this.updateSlider(e)\n    }), ce('text', null, 'Guaranteed Income: '), ce('input', {\n      id: \"fromAdvance\",\n      placeholder: \"From Advance\"\n    }));\n  }\n\n  setInitialStates() {\n    this.setState({\n      streamNumber: 1000000000,\n      role: \"Writer & Artist\",\n      recordDealDelected: \"Royalty\",\n      publishingDealSelected: \"Full/Traditional\",\n      advance: 0\n    });\n  }\n\n  changeStreams(e) {\n    console.log(\"changed streams to: \" + e.target.value);\n    this.setState({\n      streamNumber: e.target.value\n    });\n  }\n\n  setSliderValue(val) {\n    this.setState({\n      sliderValue: val\n    });\n  }\n\n  updateSlider(e) {\n    console.log(e.target.value); //val = document.getElementById(\"splitSlider\").value()\n\n    this.setState({\n      sliderValue: e.target.value\n    });\n  }\n\n  buildPublishingDealSelect() {\n    let fullTrad = {\n      id: 0,\n      name: \"Full/Traditional\"\n    };\n    let coPublishing = {\n      id: 1,\n      name: \"Co-Publishing\"\n    };\n    let adminDeal = {\n      id: 2,\n      name: \"Admin Deal\"\n    };\n    let noDeal = {\n      id: 3,\n      name: \"No Deal\"\n    };\n    let deals = [fullTrad, coPublishing, adminDeal, noDeal];\n    this.setState({\n      publishDeal: deals\n    });\n  }\n\n  handlePublishingDealSelect(e) {\n    console.log(e.target.value);\n    this.setState({\n      publishingDealSelected: e.target.value\n    });\n  }\n\n  handleRoleButton(which) {\n    console.log(which);\n    this.setState({\n      role: which\n    });\n  } // handleRecDealSelect(e)\n\n\n  handleRecDealSelect(e) {\n    //console.log(\"selecting Roles\");\n    console.log(e.target.value);\n    this.setState({\n      recordDealSelected: e.target.value\n    });\n  }\n\n  buildRecordDealSelect() {\n    //console.log(\"Roles!\");\n    let royalty = {\n      id: 0,\n      name: \"Royalty\"\n    };\n    let netProfit = {\n      id: 1,\n      name: \"Net Profit\"\n    };\n    let distributionPercent = {\n      id: 2,\n      name: \"Distribution Percent\"\n    };\n    let labelServices = {\n      id: 3,\n      name: \"Label Services\"\n    };\n    let rls = [royalty, netProfit, distributionPercent, labelServices];\n    this.setState({\n      recordDeal: rls\n    });\n  }\n\n}\n\nexport default CalcPage;","map":{"version":3,"sources":["/Users/samvincent/Desktop/MusicStreamingCalculator/src/CalcPage.js"],"names":["React","SmallText","ce","createElement","avgPubPayout","spotify","name","payoutPerStream","marketShareStreams","marketShareDollars","includeInCalculations","apple","youtube","amazon","google","pandora","deezer","amazonDig","tidal","others","dsps","toggleMe","index","CalcPage","Component","constructor","props","state","streamNumber","role","recordDeal","publishDeal","sliderValue","recordDealSelected","publishingDealSelected","advance","componentDidMount","console","log","buildRecordDealSelect","handleRoleButton","buildPublishingDealSelect","setSliderValue","setInitialStates","render","className","id","type","placeholder","onChange","e","changeStreams","onClick","handleRecDealSelect","map","deal","key","handlePublishingDealSelect","min","max","updateSlider","setState","recordDealDelected","target","value","val","fullTrad","coPublishing","adminDeal","noDeal","deals","which","royalty","netProfit","distributionPercent","labelServices","rls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\n\nconst ce = React.createElement;\n\n\n//average / approx payout for publishing for stream\nconst avgPubPayout = 0.0007174565191\n\n\n//handling dsps\nlet spotify = {\n  name: \"Spotify\",\n  payoutPerStream: 0.00331,\n  marketShareStreams: .2922,\n    marketShareDollars: .4893,\n    includeInCalculations: true\n}\nlet apple = {\n  name: \"Apple Music\",\n  payoutPerStream: 0.00495,\n  marketShareStreams: .0995,\n    marketShareDollars: .2497,\n    includeInCalculations: true\n}\nlet youtube = {\n  name: \"Youtube Content ld\",\n  payoutPerStream: 0.00028,\n  marketShareStreams: .4858,\n    marketShareDollars: .0699,\n    includeInCalculations: true\n}\nlet amazon = {\n  name: \"Amazon Unlimited\",\n  payoutPerStream: 0.01175,\n  marketShareStreams: .0068,\n    marketShareDollars: .0404,\n    includeInCalculations: true\n}\nlet google = {\n  name: \"Google Play\",\n  payoutPerStream: 0.00543,\n  marketShareStreams: .0112,\n    marketShareDollars: .0308,\n    includeInCalculations: true\n}\nlet pandora = {\n  name: \"Pandora\",\n  payoutPerStream: 0.00155,\n  marketShareStreams: .0386,\n    marketShareDollars: .0303,\n    includeInCalculations: true\n}\nlet deezer = {\n  name: \"Deezer\",\n  payoutPerStream: 0.00567,\n  marketShareStreams: .0091,\n    marketShareDollars: .026,\n    includeInCalculations: true\n}\nlet amazonDig = {\n  name: \"Amazon Digital Services\",\n  payoutPerStream: 0.00395,\n  marketShareStreams: .0095,\n    marketShareDollars: .019,\n    includeInCalculations: true\n}\nlet tidal = {\n  name: \"TIDAL\",\n  payoutPerStream: 0.00927,\n  marketShareStreams: 0.0021,\n    marketShareDollars: 0.0098,\n    includeInCalculations: true\n}\nlet others = {\n  name: \"Napster / Rhapsody\",\n  payoutPerStream: 0.0111,\n  marketShareStreams: 0.0014,\n    marketShareDollars: 0.0080,\n    includeInCalculations: true\n}\n\nlet dsps = [spotify, apple, youtube, amazon, google, pandora, deezer, amazonDig, tidal, others]\n\nfunction toggleMe(index) {\n  dsps[index].includeInCalculations = !dsps[index].includeInCalculations;\n  //console.log(dsps[index].name);\n  //console.log(dsps[index].includeInCalculations);\n}\n\n\nclass CalcPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            streamNumber: null,\n            role: null,\n            recordDeal: [],\n            publishDeal: [],\n            sliderValue: null,\n            recordDealSelected: null,\n            publishingDealSelected: null,\n            advance: null\n        };\n\n    }\n\n    componentDidMount() {\n        console.log(\"mounted\");\n        this.buildRecordDealSelect();\n        this.handleRoleButton(\"Writer & Artist\");\n        this.buildPublishingDealSelect();\n        this.setSliderValue(50);\n        this.setInitialStates();\n    }\n\n    render() {\n      return ce('div', null,\n        ce('h2', {className: \"font\"}, 'Welcome to the Revenue Calculator'),\n            ce('input', {id: \"estStreams\", type: \"text\", placeholder: \"Enter Est. Streams\", onChange: e => this.changeStreams(e)}),\n            ce('br'),\n            ce('text', null, 'Role: '),\n            /*ce('select', {onChange: e => this.handleRoleSelect(e)}, \n                this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n                ),*/\n            ce('button', {onClick: e => this.handleRoleButton(\"artist\")}, 'Artist Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"writer\")}, 'Writer Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"both\")}, 'Writer & Artist'),\n            ce('br'),\n            ce('text', null, 'Record Deal Type: '),\n            ce('select', {onChange: e => this.handleRecDealSelect(e)}, \n                this.state.recordDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Publishing Deal Type: '),\n            ce('select', {onChange: e => this.handlePublishingDealSelect(e)},\n                this.state.publishDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Deal Split: '),\n            ce('input', {type: 'range', min: '1', max: '100', id: 'splitSlider', onChange: e => this.updateSlider(e)}),\n            ce('text', null, 'Guaranteed Income: '),\n            ce('input', {id: \"fromAdvance\", placeholder: \"From Advance\"})\n\n        )\n\n    }\n\n    setInitialStates() {\n        this.setState({streamNumber: 1000000000,role: \"Writer & Artist\", recordDealDelected: \"Royalty\", publishingDealSelected: \"Full/Traditional\", advance: 0})\n    }\n\n    changeStreams(e) {\n        console.log(\"changed streams to: \" + e.target.value);\n        this.setState({streamNumber: e.target.value});\n    }\n\n    setSliderValue(val) {\n        this.setState( {sliderValue: val})\n    }\n    updateSlider(e) {\n        console.log(e.target.value)\n        //val = document.getElementById(\"splitSlider\").value()\n        this.setState( {sliderValue: e.target.value})\n    }\n\n    buildPublishingDealSelect() {\n        let fullTrad = {\n            id: 0,\n            name: \"Full/Traditional\"\n        }\n        let coPublishing = {\n            id: 1,\n            name: \"Co-Publishing\"\n        }\n        let adminDeal = {\n            id: 2,\n            name: \"Admin Deal\"\n        }\n        let noDeal = {\n            id: 3,\n            name: \"No Deal\"\n        }\n        let deals = [fullTrad, coPublishing, adminDeal, noDeal]\n        this.setState( {publishDeal: deals})\n    }\n\n    handlePublishingDealSelect(e) {\n        console.log(e.target.value);\n        this.setState({publishingDealSelected: e.target.value})\n    }\n\n\n    handleRoleButton(which) {\n        console.log(which);\n        this.setState({role: which})\n    }\n\n   // handleRecDealSelect(e)\n\n    handleRecDealSelect(e) {\n        //console.log(\"selecting Roles\");\n        console.log(e.target.value);\n        this.setState({recordDealSelected: e.target.value})\n    }\n\n    buildRecordDealSelect() {\n        //console.log(\"Roles!\");\n        let royalty = {\n            id: 0,\n            name: \"Royalty\"\n        };\n        let netProfit = {\n            id: 1,\n            name: \"Net Profit\"\n        };\n        let distributionPercent = {\n            id: 2,\n            name: \"Distribution Percent\"\n        };\n        let labelServices = {\n            id: 3,\n            name: \"Label Services\"\n        }\n\n        let rls = [royalty, netProfit, distributionPercent, labelServices];\n        this.setState( {recordDeal: rls} );\n    }\n\n\n\n}\n\n\nexport default CalcPage;\n"]},"metadata":{},"sourceType":"module"}