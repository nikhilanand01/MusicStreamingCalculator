{"ast":null,"code":"import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\nconst ce = React.createElement; //average / approx payout for publishing for stream\n\nconst avgPubPayout = 0.0007174565191;\n\nclass CalcPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prov: [],\n      streamNumber: null,\n      role: null,\n      recordDeal: [],\n      publishDeal: [],\n      sliderValue: null,\n      recordDealSelected: null,\n      publishingDealSelected: null,\n      advance: null,\n      costs: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.buildRecordDealSelect();\n    this.handleRoleButton(\"Writer & Artist\");\n    this.buildPublishingDealSelect();\n    this.setSliderValue(50);\n    this.buildDspsArr();\n    this.setInitialStates();\n  }\n\n  render() {\n    return ce('div', null, ce('h2', {\n      className: \"font\"\n    }, 'Welcome to the Revenue Calculator'), ce('input', {\n      id: \"estStreams\",\n      type: \"text\",\n      placeholder: \"Enter Est. Streams\",\n      onChange: e => this.changeStreams(e)\n    }), ce('br'), ce('text', null, 'Role: '),\n    /*ce('select', {onChange: e => this.handleRoleSelect(e)}, \n        this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n        ),*/\n    ce('button', {\n      onClick: e => this.handleRoleButton(\"artist\")\n    }, 'Artist Only'), ce('button', {\n      onClick: e => this.handleRoleButton(\"writer\")\n    }, 'Writer Only'), ce('button', {\n      onClick: e => this.handleRoleButton(\"both\")\n    }, 'Writer & Artist'), ce('br'), ce('text', null, 'Record Deal Type: '), ce('select', {\n      onChange: e => this.handleRecDealSelect(e)\n    }, this.state.recordDeal.map(deal => ce('option', {\n      key: deal.id\n    }, deal.name))), ce('br'), ce('text', null, 'Publishing Deal Type: '), ce('select', {\n      onChange: e => this.handlePublishingDealSelect(e)\n    }, this.state.publishDeal.map(deal => ce('option', {\n      key: deal.id\n    }, deal.name))), ce('br'), ce('text', null, 'Deal Split: '), ce('input', {\n      type: 'range',\n      min: '1',\n      max: '100',\n      id: 'splitSlider',\n      onChange: e => this.updateSlider(e)\n    }), ce('text', null, 'Guaranteed Income: '), ce('input', {\n      id: \"fromAdvance\",\n      placeholder: \"From Advance\",\n      onChange: e => this.updateAdvance(e)\n    }), ce('br'), ce('text', null, 'Costs: '), ce('input', {\n      placeholder: 'Costs',\n      onChange: e => this.updateCosts(e)\n    }), ce('br'), ce('text', null, 'Recoupable: '), ce('input', {\n      type: 'checkbox',\n      checked: 'true'\n    }), ce('br'), ce('text', null, 'DSPs'), ce('br'), ce('table', {\n      id: 'dspTable'\n    }, ce('thead', null, ce('tr', null, ce('th', null, \"Platform\"), ce('th', null, \"Include\"))) //,\n    //<!--ce('tbody', null, this.state.prov.map(provs => ce('tr', null, ce('td', null, ce('text', null, provs.name))), ce('tr', null, ce('td', null, ce('input', {type: 'checkbox', checked: provs.includeInCalculations, onClick: e => this.toggleMe(provs.id)})))))-->\n    ));\n  }\n\n  setInitialStates() {\n    this.setState({\n      streamNumber: 1000000000,\n      role: \"Writer & Artist\",\n      recordDealDelected: \"Royalty\",\n      publishingDealSelected: \"Full/Traditional\",\n      advance: 0,\n      costs: 0\n    });\n    console.log(this.state.prov);\n  }\n\n  changeStreams(e) {\n    console.log(\"changed streams to: \" + e.target.value);\n    this.setState({\n      streamNumber: e.target.value\n    });\n  }\n\n  updateAdvance(e) {\n    console.log(\"changed advance to: \" + e.target.value);\n    this.setState({\n      advance: e.target.value\n    });\n  }\n\n  updateCosts(e) {\n    console.log(\"changed costs to: \" + e.target.value);\n    this.setState({\n      costs: e.target.value\n    });\n  }\n\n  setSliderValue(val) {\n    this.setState({\n      sliderValue: val\n    });\n  }\n\n  updateSlider(e) {\n    console.log(e.target.value); //val = document.getElementById(\"splitSlider\").value()\n\n    this.setState({\n      sliderValue: e.target.value\n    });\n  }\n\n  buildPublishingDealSelect() {\n    let fullTrad = {\n      id: 0,\n      name: \"Full/Traditional\"\n    };\n    let coPublishing = {\n      id: 1,\n      name: \"Co-Publishing\"\n    };\n    let adminDeal = {\n      id: 2,\n      name: \"Admin Deal\"\n    };\n    let noDeal = {\n      id: 3,\n      name: \"No Deal\"\n    };\n    let deals = [fullTrad, coPublishing, adminDeal, noDeal];\n    this.setState({\n      publishDeal: deals\n    });\n  }\n\n  handlePublishingDealSelect(e) {\n    console.log(e.target.value);\n    this.setState({\n      publishingDealSelected: e.target.value\n    });\n  }\n\n  handleRoleButton(which) {\n    console.log(which);\n    this.setState({\n      role: which\n    });\n  } // handleRecDealSelect(e)\n\n\n  handleRecDealSelect(e) {\n    //console.log(\"selecting Roles\");\n    console.log(e.target.value);\n    this.setState({\n      recordDealSelected: e.target.value\n    });\n  }\n\n  buildRecordDealSelect() {\n    //console.log(\"Roles!\");\n    let royalty = {\n      id: 0,\n      name: \"Royalty\"\n    };\n    let netProfit = {\n      id: 1,\n      name: \"Net Profit\"\n    };\n    let distributionPercent = {\n      id: 2,\n      name: \"Distribution Percent\"\n    };\n    let labelServices = {\n      id: 3,\n      name: \"Label Services\"\n    };\n    let rls = [royalty, netProfit, distributionPercent, labelServices];\n    this.setState({\n      recordDeal: rls\n    });\n  }\n\n  buildDspsArr() {\n    //handling dsps\n    let spotify = {\n      id: 0,\n      name: \"Spotify\",\n      payoutPerStream: 0.00331,\n      marketShareStreams: .2922,\n      marketShareDollars: .4893,\n      includeInCalculations: true\n    };\n    let apple = {\n      id: 1,\n      name: \"Apple Music\",\n      payoutPerStream: 0.00495,\n      marketShareStreams: .0995,\n      marketShareDollars: .2497,\n      includeInCalculations: true\n    };\n    let youtube = {\n      id: 2,\n      name: \"Youtube Content ld\",\n      payoutPerStream: 0.00028,\n      marketShareStreams: .4858,\n      marketShareDollars: .0699,\n      includeInCalculations: true\n    };\n    let amazon = {\n      id: 3,\n      name: \"Amazon Unlimited\",\n      payoutPerStream: 0.01175,\n      marketShareStreams: .0068,\n      marketShareDollars: .0404,\n      includeInCalculations: true\n    };\n    let google = {\n      id: 4,\n      name: \"Google Play\",\n      payoutPerStream: 0.00543,\n      marketShareStreams: .0112,\n      marketShareDollars: .0308,\n      includeInCalculations: true\n    };\n    let pandora = {\n      id: 5,\n      name: \"Pandora\",\n      payoutPerStream: 0.00155,\n      marketShareStreams: .0386,\n      marketShareDollars: .0303,\n      includeInCalculations: true\n    };\n    let deezer = {\n      id: 6,\n      name: \"Deezer\",\n      payoutPerStream: 0.00567,\n      marketShareStreams: .0091,\n      marketShareDollars: .026,\n      includeInCalculations: true\n    };\n    let amazonDig = {\n      id: 7,\n      name: \"Amazon Digital Services\",\n      payoutPerStream: 0.00395,\n      marketShareStreams: .0095,\n      marketShareDollars: .019,\n      includeInCalculations: true\n    };\n    let tidal = {\n      id: 8,\n      name: \"TIDAL\",\n      payoutPerStream: 0.00927,\n      marketShareStreams: 0.0021,\n      marketShareDollars: 0.0098,\n      includeInCalculations: true\n    };\n    let others = {\n      id: 9,\n      name: \"Napster / Rhapsody\",\n      payoutPerStream: 0.0111,\n      marketShareStreams: 0.0014,\n      marketShareDollars: 0.0080,\n      includeInCalculations: true\n    };\n    let dsps = [spotify, apple, youtube, amazon, google, pandora, deezer, amazonDig, tidal, others];\n    console.log(dsps);\n    this.setState({\n      prov: dsps\n    });\n  }\n\n  toggleMe(index) {\n    this.state.prov[index].includeInCalculations = !this.state.prov[index].includeInCalculations; //console.log(dsps[index].name);\n    //console.log(dsps[index].includeInCalculations);\n  }\n\n}\n\nexport default CalcPage;","map":{"version":3,"sources":["/Users/samvincent/Desktop/MusicStreamingCalculator/src/CalcPage.js"],"names":["React","SmallText","ce","createElement","avgPubPayout","CalcPage","Component","constructor","props","state","prov","streamNumber","role","recordDeal","publishDeal","sliderValue","recordDealSelected","publishingDealSelected","advance","costs","componentDidMount","console","log","buildRecordDealSelect","handleRoleButton","buildPublishingDealSelect","setSliderValue","buildDspsArr","setInitialStates","render","className","id","type","placeholder","onChange","e","changeStreams","onClick","handleRecDealSelect","map","deal","key","name","handlePublishingDealSelect","min","max","updateSlider","updateAdvance","updateCosts","checked","setState","recordDealDelected","target","value","val","fullTrad","coPublishing","adminDeal","noDeal","deals","which","royalty","netProfit","distributionPercent","labelServices","rls","spotify","payoutPerStream","marketShareStreams","marketShareDollars","includeInCalculations","apple","youtube","amazon","google","pandora","deezer","amazonDig","tidal","others","dsps","toggleMe","index"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,MAAMC,EAAE,GAAGF,KAAK,CAACG,aAAjB,C,CAGA;;AACA,MAAMC,YAAY,GAAG,eAArB;;AAIA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,YAAY,EAAE,IAFL;AAGTC,MAAAA,IAAI,EAAE,IAHG;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,WAAW,EAAE,EALJ;AAMTC,MAAAA,WAAW,EAAE,IANJ;AAOTC,MAAAA,kBAAkB,EAAE,IAPX;AAQTC,MAAAA,sBAAsB,EAAE,IARf;AASTC,MAAAA,OAAO,EAAE,IATA;AAUTC,MAAAA,KAAK,EAAE;AAVE,KAAb;AAaH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAKC,qBAAL;AACA,SAAKC,gBAAL,CAAsB,iBAAtB;AACA,SAAKC,yBAAL;AACA,SAAKC,cAAL,CAAoB,EAApB;AACA,SAAKC,YAAL;AACA,SAAKC,gBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO3B,EAAE,CAAC,KAAD,EAAQ,IAAR,EACPA,EAAE,CAAC,IAAD,EAAO;AAAC4B,MAAAA,SAAS,EAAE;AAAZ,KAAP,EAA4B,mCAA5B,CADK,EAEH5B,EAAE,CAAC,OAAD,EAAU;AAAC6B,MAAAA,EAAE,EAAE,YAAL;AAAmBC,MAAAA,IAAI,EAAE,MAAzB;AAAiCC,MAAAA,WAAW,EAAE,oBAA9C;AAAoEC,MAAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKC,aAAL,CAAmBD,CAAnB;AAAnF,KAAV,CAFC,EAGHjC,EAAE,CAAC,IAAD,CAHC,EAIHA,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,QAAf,CAJC;AAKH;AACZ;AACA;AACYA,IAAAA,EAAE,CAAC,QAAD,EAAW;AAACmC,MAAAA,OAAO,EAAEF,CAAC,IAAI,KAAKX,gBAAL,CAAsB,QAAtB;AAAf,KAAX,EAA4D,aAA5D,CARC,EASHtB,EAAE,CAAC,QAAD,EAAW;AAACmC,MAAAA,OAAO,EAAEF,CAAC,IAAI,KAAKX,gBAAL,CAAsB,QAAtB;AAAf,KAAX,EAA4D,aAA5D,CATC,EAUHtB,EAAE,CAAC,QAAD,EAAW;AAACmC,MAAAA,OAAO,EAAEF,CAAC,IAAI,KAAKX,gBAAL,CAAsB,MAAtB;AAAf,KAAX,EAA0D,iBAA1D,CAVC,EAWHtB,EAAE,CAAC,IAAD,CAXC,EAYHA,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,oBAAf,CAZC,EAaHA,EAAE,CAAC,QAAD,EAAW;AAACgC,MAAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKG,mBAAL,CAAyBH,CAAzB;AAAhB,KAAX,EACE,KAAK1B,KAAL,CAAWI,UAAX,CAAsB0B,GAAtB,CAA0BC,IAAI,IAAItC,EAAE,CAAC,QAAD,EAAW;AAACuC,MAAAA,GAAG,EAAED,IAAI,CAACT;AAAX,KAAX,EAA2BS,IAAI,CAACE,IAAhC,CAApC,CADF,CAbC,EAgBHxC,EAAE,CAAC,IAAD,CAhBC,EAiBHA,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,wBAAf,CAjBC,EAkBHA,EAAE,CAAC,QAAD,EAAW;AAACgC,MAAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKQ,0BAAL,CAAgCR,CAAhC;AAAhB,KAAX,EACE,KAAK1B,KAAL,CAAWK,WAAX,CAAuByB,GAAvB,CAA2BC,IAAI,IAAItC,EAAE,CAAC,QAAD,EAAW;AAACuC,MAAAA,GAAG,EAAED,IAAI,CAACT;AAAX,KAAX,EAA2BS,IAAI,CAACE,IAAhC,CAArC,CADF,CAlBC,EAqBHxC,EAAE,CAAC,IAAD,CArBC,EAsBHA,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,cAAf,CAtBC,EAuBHA,EAAE,CAAC,OAAD,EAAU;AAAC8B,MAAAA,IAAI,EAAE,OAAP;AAAgBY,MAAAA,GAAG,EAAE,GAArB;AAA0BC,MAAAA,GAAG,EAAE,KAA/B;AAAsCd,MAAAA,EAAE,EAAE,aAA1C;AAAyDG,MAAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKW,YAAL,CAAkBX,CAAlB;AAAxE,KAAV,CAvBC,EAwBHjC,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,qBAAf,CAxBC,EAyBHA,EAAE,CAAC,OAAD,EAAU;AAAC6B,MAAAA,EAAE,EAAE,aAAL;AAAoBE,MAAAA,WAAW,EAAE,cAAjC;AAAiDC,MAAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKY,aAAL,CAAmBZ,CAAnB;AAAhE,KAAV,CAzBC,EA0BHjC,EAAE,CAAC,IAAD,CA1BC,EA2BHA,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,SAAf,CA3BC,EA4BHA,EAAE,CAAC,OAAD,EAAU;AAAC+B,MAAAA,WAAW,EAAE,OAAd;AAAuBC,MAAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKa,WAAL,CAAiBb,CAAjB;AAAtC,KAAV,CA5BC,EA6BHjC,EAAE,CAAC,IAAD,CA7BC,EA8BHA,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,cAAf,CA9BC,EA+BHA,EAAE,CAAC,OAAD,EAAU;AAAC8B,MAAAA,IAAI,EAAE,UAAP;AAAmBiB,MAAAA,OAAO,EAAE;AAA5B,KAAV,CA/BC,EAgCH/C,EAAE,CAAC,IAAD,CAhCC,EAiCHA,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,MAAf,CAjCC,EAkCHA,EAAE,CAAC,IAAD,CAlCC,EAmCHA,EAAE,CAAC,OAAD,EAAU;AAAC6B,MAAAA,EAAE,EAAE;AAAL,KAAV,EACA7B,EAAE,CAAC,OAAD,EAAU,IAAV,EAAgBA,EAAE,CAAC,IAAD,EAAO,IAAP,EAAaA,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,UAAb,CAAf,EAAyCA,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,SAAb,CAA3C,CAAlB,CADF,CACwF;AACxF;AAFA,KAnCC,CAAT;AA0CD;;AAED0B,EAAAA,gBAAgB,GAAG;AAEjB,SAAKsB,QAAL,CAAc;AAACvC,MAAAA,YAAY,EAAE,UAAf;AAA0BC,MAAAA,IAAI,EAAE,iBAAhC;AAAmDuC,MAAAA,kBAAkB,EAAE,SAAvE;AAAkFlC,MAAAA,sBAAsB,EAAE,kBAA1G;AAA8HC,MAAAA,OAAO,EAAE,CAAvI;AAA0IC,MAAAA,KAAK,EAAE;AAAjJ,KAAd;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,IAAvB;AACD;;AAED0B,EAAAA,aAAa,CAACD,CAAD,EAAI;AACbd,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBa,CAAC,CAACiB,MAAF,CAASC,KAA9C;AACA,SAAKH,QAAL,CAAc;AAACvC,MAAAA,YAAY,EAAEwB,CAAC,CAACiB,MAAF,CAASC;AAAxB,KAAd;AACH;;AAEDN,EAAAA,aAAa,CAACZ,CAAD,EAAI;AACfd,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBa,CAAC,CAACiB,MAAF,CAASC,KAA9C;AACA,SAAKH,QAAL,CAAc;AAAChC,MAAAA,OAAO,EAAEiB,CAAC,CAACiB,MAAF,CAASC;AAAnB,KAAd;AACD;;AAEDL,EAAAA,WAAW,CAACb,CAAD,EAAI;AACXd,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBa,CAAC,CAACiB,MAAF,CAASC,KAA5C;AACA,SAAKH,QAAL,CAAc;AAAC/B,MAAAA,KAAK,EAAEgB,CAAC,CAACiB,MAAF,CAASC;AAAjB,KAAd;AACH;;AAED3B,EAAAA,cAAc,CAAC4B,GAAD,EAAM;AAChB,SAAKJ,QAAL,CAAe;AAACnC,MAAAA,WAAW,EAAEuC;AAAd,KAAf;AACH;;AACDR,EAAAA,YAAY,CAACX,CAAD,EAAI;AACZd,IAAAA,OAAO,CAACC,GAAR,CAAYa,CAAC,CAACiB,MAAF,CAASC,KAArB,EADY,CAEZ;;AACA,SAAKH,QAAL,CAAe;AAACnC,MAAAA,WAAW,EAAEoB,CAAC,CAACiB,MAAF,CAASC;AAAvB,KAAf;AACH;;AAED5B,EAAAA,yBAAyB,GAAG;AACxB,QAAI8B,QAAQ,GAAG;AACXxB,MAAAA,EAAE,EAAE,CADO;AAEXW,MAAAA,IAAI,EAAE;AAFK,KAAf;AAIA,QAAIc,YAAY,GAAG;AACfzB,MAAAA,EAAE,EAAE,CADW;AAEfW,MAAAA,IAAI,EAAE;AAFS,KAAnB;AAIA,QAAIe,SAAS,GAAG;AACZ1B,MAAAA,EAAE,EAAE,CADQ;AAEZW,MAAAA,IAAI,EAAE;AAFM,KAAhB;AAIA,QAAIgB,MAAM,GAAG;AACT3B,MAAAA,EAAE,EAAE,CADK;AAETW,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,QAAIiB,KAAK,GAAG,CAACJ,QAAD,EAAWC,YAAX,EAAyBC,SAAzB,EAAoCC,MAApC,CAAZ;AACA,SAAKR,QAAL,CAAe;AAACpC,MAAAA,WAAW,EAAE6C;AAAd,KAAf;AACH;;AAEDhB,EAAAA,0BAA0B,CAACR,CAAD,EAAI;AAC1Bd,IAAAA,OAAO,CAACC,GAAR,CAAYa,CAAC,CAACiB,MAAF,CAASC,KAArB;AACA,SAAKH,QAAL,CAAc;AAACjC,MAAAA,sBAAsB,EAAEkB,CAAC,CAACiB,MAAF,CAASC;AAAlC,KAAd;AACH;;AAGD7B,EAAAA,gBAAgB,CAACoC,KAAD,EAAQ;AACpBvC,IAAAA,OAAO,CAACC,GAAR,CAAYsC,KAAZ;AACA,SAAKV,QAAL,CAAc;AAACtC,MAAAA,IAAI,EAAEgD;AAAP,KAAd;AACH,GAtIkC,CAwIpC;;;AAECtB,EAAAA,mBAAmB,CAACH,CAAD,EAAI;AACnB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYa,CAAC,CAACiB,MAAF,CAASC,KAArB;AACA,SAAKH,QAAL,CAAc;AAAClC,MAAAA,kBAAkB,EAAEmB,CAAC,CAACiB,MAAF,CAASC;AAA9B,KAAd;AACH;;AAED9B,EAAAA,qBAAqB,GAAG;AACpB;AACA,QAAIsC,OAAO,GAAG;AACV9B,MAAAA,EAAE,EAAE,CADM;AAEVW,MAAAA,IAAI,EAAE;AAFI,KAAd;AAIA,QAAIoB,SAAS,GAAG;AACZ/B,MAAAA,EAAE,EAAE,CADQ;AAEZW,MAAAA,IAAI,EAAE;AAFM,KAAhB;AAIA,QAAIqB,mBAAmB,GAAG;AACtBhC,MAAAA,EAAE,EAAE,CADkB;AAEtBW,MAAAA,IAAI,EAAE;AAFgB,KAA1B;AAIA,QAAIsB,aAAa,GAAG;AAChBjC,MAAAA,EAAE,EAAE,CADY;AAEhBW,MAAAA,IAAI,EAAE;AAFU,KAApB;AAKA,QAAIuB,GAAG,GAAG,CAACJ,OAAD,EAAUC,SAAV,EAAqBC,mBAArB,EAA0CC,aAA1C,CAAV;AACA,SAAKd,QAAL,CAAe;AAACrC,MAAAA,UAAU,EAAEoD;AAAb,KAAf;AACH;;AAEDtC,EAAAA,YAAY,GAAG;AAEX;AACA,QAAIuC,OAAO,GAAG;AACZnC,MAAAA,EAAE,EAAE,CADQ;AAEZW,MAAAA,IAAI,EAAE,SAFM;AAGZyB,MAAAA,eAAe,EAAE,OAHL;AAIZC,MAAAA,kBAAkB,EAAE,KAJR;AAKVC,MAAAA,kBAAkB,EAAE,KALV;AAMVC,MAAAA,qBAAqB,EAAE;AANb,KAAd;AAQA,QAAIC,KAAK,GAAG;AACVxC,MAAAA,EAAE,EAAE,CADM;AAEVW,MAAAA,IAAI,EAAE,aAFI;AAGVyB,MAAAA,eAAe,EAAE,OAHP;AAIVC,MAAAA,kBAAkB,EAAE,KAJV;AAKRC,MAAAA,kBAAkB,EAAE,KALZ;AAMRC,MAAAA,qBAAqB,EAAE;AANf,KAAZ;AAQA,QAAIE,OAAO,GAAG;AACZzC,MAAAA,EAAE,EAAE,CADQ;AAEZW,MAAAA,IAAI,EAAE,oBAFM;AAGZyB,MAAAA,eAAe,EAAE,OAHL;AAIZC,MAAAA,kBAAkB,EAAE,KAJR;AAKVC,MAAAA,kBAAkB,EAAE,KALV;AAMVC,MAAAA,qBAAqB,EAAE;AANb,KAAd;AAQA,QAAIG,MAAM,GAAG;AACX1C,MAAAA,EAAE,EAAE,CADO;AAEXW,MAAAA,IAAI,EAAE,kBAFK;AAGXyB,MAAAA,eAAe,EAAE,OAHN;AAIXC,MAAAA,kBAAkB,EAAE,KAJT;AAKTC,MAAAA,kBAAkB,EAAE,KALX;AAMTC,MAAAA,qBAAqB,EAAE;AANd,KAAb;AAQA,QAAII,MAAM,GAAG;AACX3C,MAAAA,EAAE,EAAE,CADO;AAEXW,MAAAA,IAAI,EAAE,aAFK;AAGXyB,MAAAA,eAAe,EAAE,OAHN;AAIXC,MAAAA,kBAAkB,EAAE,KAJT;AAKTC,MAAAA,kBAAkB,EAAE,KALX;AAMTC,MAAAA,qBAAqB,EAAE;AANd,KAAb;AAQA,QAAIK,OAAO,GAAG;AACZ5C,MAAAA,EAAE,EAAE,CADQ;AAEZW,MAAAA,IAAI,EAAE,SAFM;AAGZyB,MAAAA,eAAe,EAAE,OAHL;AAIZC,MAAAA,kBAAkB,EAAE,KAJR;AAKVC,MAAAA,kBAAkB,EAAE,KALV;AAMVC,MAAAA,qBAAqB,EAAE;AANb,KAAd;AAQA,QAAIM,MAAM,GAAG;AACX7C,MAAAA,EAAE,EAAE,CADO;AAEXW,MAAAA,IAAI,EAAE,QAFK;AAGXyB,MAAAA,eAAe,EAAE,OAHN;AAIXC,MAAAA,kBAAkB,EAAE,KAJT;AAKTC,MAAAA,kBAAkB,EAAE,IALX;AAMTC,MAAAA,qBAAqB,EAAE;AANd,KAAb;AAQA,QAAIO,SAAS,GAAG;AACd9C,MAAAA,EAAE,EAAE,CADU;AAEdW,MAAAA,IAAI,EAAE,yBAFQ;AAGdyB,MAAAA,eAAe,EAAE,OAHH;AAIdC,MAAAA,kBAAkB,EAAE,KAJN;AAKZC,MAAAA,kBAAkB,EAAE,IALR;AAMZC,MAAAA,qBAAqB,EAAE;AANX,KAAhB;AAQA,QAAIQ,KAAK,GAAG;AACV/C,MAAAA,EAAE,EAAE,CADM;AAEVW,MAAAA,IAAI,EAAE,OAFI;AAGVyB,MAAAA,eAAe,EAAE,OAHP;AAIVC,MAAAA,kBAAkB,EAAE,MAJV;AAKRC,MAAAA,kBAAkB,EAAE,MALZ;AAMRC,MAAAA,qBAAqB,EAAE;AANf,KAAZ;AAQA,QAAIS,MAAM,GAAG;AACXhD,MAAAA,EAAE,EAAE,CADO;AAEXW,MAAAA,IAAI,EAAE,oBAFK;AAGXyB,MAAAA,eAAe,EAAE,MAHN;AAIXC,MAAAA,kBAAkB,EAAE,MAJT;AAKTC,MAAAA,kBAAkB,EAAE,MALX;AAMTC,MAAAA,qBAAqB,EAAE;AANd,KAAb;AAQA,QAAIU,IAAI,GAAG,CAACd,OAAD,EAAUK,KAAV,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,OAA1C,EAAmDC,MAAnD,EAA2DC,SAA3D,EAAsEC,KAAtE,EAA6EC,MAA7E,CAAX;AACA1D,IAAAA,OAAO,CAACC,GAAR,CAAY0D,IAAZ;AAEA,SAAK9B,QAAL,CAAe;AAACxC,MAAAA,IAAI,EAAEsE;AAAP,KAAf;AAEH;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,SAAKzE,KAAL,CAAWC,IAAX,CAAgBwE,KAAhB,EAAuBZ,qBAAvB,GAA+C,CAAC,KAAK7D,KAAL,CAAWC,IAAX,CAAgBwE,KAAhB,EAAuBZ,qBAAvE,CADc,CAEd;AACA;AACD;;AArQkC;;AA8QvC,eAAejE,QAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SmallText from './components/SmallText.js';\n\nconst ce = React.createElement;\n\n\n//average / approx payout for publishing for stream\nconst avgPubPayout = 0.0007174565191\n\n\n\nclass CalcPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            prov: [],\n            streamNumber: null,\n            role: null,\n            recordDeal: [],\n            publishDeal: [],\n            sliderValue: null,\n            recordDealSelected: null,\n            publishingDealSelected: null,\n            advance: null,\n            costs: null\n        };\n\n    }\n\n    componentDidMount() {\n        console.log(\"mounted\");\n        this.buildRecordDealSelect();\n        this.handleRoleButton(\"Writer & Artist\");\n        this.buildPublishingDealSelect();\n        this.setSliderValue(50);\n        this.buildDspsArr();\n        this.setInitialStates();\n    }\n\n    render() {\n      return ce('div', null,\n        ce('h2', {className: \"font\"}, 'Welcome to the Revenue Calculator'),\n            ce('input', {id: \"estStreams\", type: \"text\", placeholder: \"Enter Est. Streams\", onChange: e => this.changeStreams(e)}),\n            ce('br'),\n            ce('text', null, 'Role: '),\n            /*ce('select', {onChange: e => this.handleRoleSelect(e)}, \n                this.state.roles.map(role => ce('option', {key: role.id}, role.name))\n                ),*/\n            ce('button', {onClick: e => this.handleRoleButton(\"artist\")}, 'Artist Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"writer\")}, 'Writer Only'),\n            ce('button', {onClick: e => this.handleRoleButton(\"both\")}, 'Writer & Artist'),\n            ce('br'),\n            ce('text', null, 'Record Deal Type: '),\n            ce('select', {onChange: e => this.handleRecDealSelect(e)}, \n                this.state.recordDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Publishing Deal Type: '),\n            ce('select', {onChange: e => this.handlePublishingDealSelect(e)},\n                this.state.publishDeal.map(deal => ce('option', {key: deal.id}, deal.name))\n                ),\n            ce('br'),\n            ce('text', null, 'Deal Split: '),\n            ce('input', {type: 'range', min: '1', max: '100', id: 'splitSlider', onChange: e => this.updateSlider(e)}),\n            ce('text', null, 'Guaranteed Income: '),\n            ce('input', {id: \"fromAdvance\", placeholder: \"From Advance\", onChange: e => this.updateAdvance(e)}),\n            ce('br'),\n            ce('text', null, 'Costs: '),\n            ce('input', {placeholder: 'Costs', onChange: e => this.updateCosts(e)}),\n            ce('br'),\n            ce('text', null, 'Recoupable: '),\n            ce('input', {type: 'checkbox', checked: 'true'}),\n            ce('br'),\n            ce('text', null, 'DSPs'),\n            ce('br'),\n            ce('table', {id: 'dspTable'}, \n              ce('thead', null, ce('tr', null, ce('th', null, \"Platform\"), ce('th', null, \"Include\")))//,\n              //<!--ce('tbody', null, this.state.prov.map(provs => ce('tr', null, ce('td', null, ce('text', null, provs.name))), ce('tr', null, ce('td', null, ce('input', {type: 'checkbox', checked: provs.includeInCalculations, onClick: e => this.toggleMe(provs.id)})))))-->\n            )\n            \n        )\n\n    }\n\n    setInitialStates() {\n\n      this.setState({streamNumber: 1000000000,role: \"Writer & Artist\", recordDealDelected: \"Royalty\", publishingDealSelected: \"Full/Traditional\", advance: 0, costs: 0});\n\n      console.log(this.state.prov)\n    }\n\n    changeStreams(e) {\n        console.log(\"changed streams to: \" + e.target.value);\n        this.setState({streamNumber: e.target.value});\n    }\n\n    updateAdvance(e) {\n      console.log(\"changed advance to: \" + e.target.value);\n      this.setState({advance: e.target.value});\n    }\n\n    updateCosts(e) {\n        console.log(\"changed costs to: \" + e.target.value);\n        this.setState({costs: e.target.value});\n    }\n\n    setSliderValue(val) {\n        this.setState( {sliderValue: val})\n    }\n    updateSlider(e) {\n        console.log(e.target.value)\n        //val = document.getElementById(\"splitSlider\").value()\n        this.setState( {sliderValue: e.target.value})\n    }\n\n    buildPublishingDealSelect() {\n        let fullTrad = {\n            id: 0,\n            name: \"Full/Traditional\"\n        }\n        let coPublishing = {\n            id: 1,\n            name: \"Co-Publishing\"\n        }\n        let adminDeal = {\n            id: 2,\n            name: \"Admin Deal\"\n        }\n        let noDeal = {\n            id: 3,\n            name: \"No Deal\"\n        }\n        let deals = [fullTrad, coPublishing, adminDeal, noDeal]\n        this.setState( {publishDeal: deals})\n    }\n\n    handlePublishingDealSelect(e) {\n        console.log(e.target.value);\n        this.setState({publishingDealSelected: e.target.value})\n    }\n\n\n    handleRoleButton(which) {\n        console.log(which);\n        this.setState({role: which})\n    }\n\n   // handleRecDealSelect(e)\n\n    handleRecDealSelect(e) {\n        //console.log(\"selecting Roles\");\n        console.log(e.target.value);\n        this.setState({recordDealSelected: e.target.value})\n    }\n\n    buildRecordDealSelect() {\n        //console.log(\"Roles!\");\n        let royalty = {\n            id: 0,\n            name: \"Royalty\"\n        };\n        let netProfit = {\n            id: 1,\n            name: \"Net Profit\"\n        };\n        let distributionPercent = {\n            id: 2,\n            name: \"Distribution Percent\"\n        };\n        let labelServices = {\n            id: 3,\n            name: \"Label Services\"\n        }\n\n        let rls = [royalty, netProfit, distributionPercent, labelServices];\n        this.setState( {recordDeal: rls} );\n    }\n\n    buildDspsArr() {\n\n        //handling dsps\n        let spotify = {\n          id: 0,\n          name: \"Spotify\",\n          payoutPerStream: 0.00331,\n          marketShareStreams: .2922,\n            marketShareDollars: .4893,\n            includeInCalculations: true\n        };\n        let apple = {\n          id: 1,\n          name: \"Apple Music\",\n          payoutPerStream: 0.00495,\n          marketShareStreams: .0995,\n            marketShareDollars: .2497,\n            includeInCalculations: true\n        };\n        let youtube = {\n          id: 2,\n          name: \"Youtube Content ld\",\n          payoutPerStream: 0.00028,\n          marketShareStreams: .4858,\n            marketShareDollars: .0699,\n            includeInCalculations: true\n        };\n        let amazon = {\n          id: 3,\n          name: \"Amazon Unlimited\",\n          payoutPerStream: 0.01175,\n          marketShareStreams: .0068,\n            marketShareDollars: .0404,\n            includeInCalculations: true\n        };\n        let google = {\n          id: 4,\n          name: \"Google Play\",\n          payoutPerStream: 0.00543,\n          marketShareStreams: .0112,\n            marketShareDollars: .0308,\n            includeInCalculations: true\n        };\n        let pandora = {\n          id: 5,\n          name: \"Pandora\",\n          payoutPerStream: 0.00155,\n          marketShareStreams: .0386,\n            marketShareDollars: .0303,\n            includeInCalculations: true\n        };\n        let deezer = {\n          id: 6,\n          name: \"Deezer\",\n          payoutPerStream: 0.00567,\n          marketShareStreams: .0091,\n            marketShareDollars: .026,\n            includeInCalculations: true\n        };\n        let amazonDig = {\n          id: 7,\n          name: \"Amazon Digital Services\",\n          payoutPerStream: 0.00395,\n          marketShareStreams: .0095,\n            marketShareDollars: .019,\n            includeInCalculations: true\n        };\n        let tidal = {\n          id: 8,\n          name: \"TIDAL\",\n          payoutPerStream: 0.00927,\n          marketShareStreams: 0.0021,\n            marketShareDollars: 0.0098,\n            includeInCalculations: true\n        };\n        let others = {\n          id: 9,\n          name: \"Napster / Rhapsody\",\n          payoutPerStream: 0.0111,\n          marketShareStreams: 0.0014,\n            marketShareDollars: 0.0080,\n            includeInCalculations: true\n        };\n        let dsps = [spotify, apple, youtube, amazon, google, pandora, deezer, amazonDig, tidal, others];\n        console.log(dsps)\n\n        this.setState( {prov: dsps} );\n\n    }\n\n    toggleMe(index) {\n      this.state.prov[index].includeInCalculations = !this.state.prov[index].includeInCalculations;\n      //console.log(dsps[index].name);\n      //console.log(dsps[index].includeInCalculations);\n    }\n\n\n\n\n\n}\n\n\nexport default CalcPage;\n"]},"metadata":{},"sourceType":"module"}