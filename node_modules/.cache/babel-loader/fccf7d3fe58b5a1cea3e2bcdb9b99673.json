{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/NumberInput.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { TransitionMotion, spring } from 'react-motion';\nimport \"../stylesheets/NumberInput.css\";\n\nclass NumberInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: props.locked && props.active || false,\n      // FIX THIS VALUE TO HAVE INPUT BE TRUE... RN \"\" is so 1 is \"\" then 12 is \"1\"\n      value: props.value || \"\",\n      error: props.error || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({\n      value,\n      error: 0\n    });\n  }\n\n  handleKeyPress(event) {\n    console.log(this.state.value);\n  }\n\n  render() {\n    const {\n      active,\n      value,\n      error,\n      label\n    } = this.state;\n    const {\n      predicted,\n      locked\n    } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) && \"active\"} ${locked && !active && \"locked\"}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: fieldClassName,\n      children: [active && value && predicted && predicted.includes(value) && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"predicted\",\n        children: predicted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: 0,\n        type: \"text\",\n        value: value,\n        placeholder: label,\n        onChange: this.changeValue.bind(this),\n        onKeyPress: this.handleKeyPress.bind(this),\n        onFocus: () => !locked && this.setState({\n          active: true\n        }),\n        onBlur: () => !locked && this.setState({\n          active: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: 0,\n        className: error && \"error\",\n        children: error || label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NumberInput;","map":{"version":3,"sources":["/Users/samvincent/Desktop/MusicStreamingCalculator/src/components/NumberInput.js"],"names":["React","render","TransitionMotion","spring","NumberInput","Component","constructor","props","state","active","locked","value","error","label","changeValue","event","target","setState","handleKeyPress","console","log","predicted","fieldClassName","includes","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,gBAAR,EAA0BC,MAA1B,QAAwC,cAAxC;AACA,OAAO,gCAAP;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAGF,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACE,MAAvB,IAAkC,KAD/B;AAEX;AACAE,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,IAAe,EAHX;AAIXC,MAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,IAAe,EAJX;AAKXC,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,IAAe;AALX,KAAb;AAOD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMJ,KAAK,GAAGI,KAAK,CAACC,MAAN,CAAaL,KAA3B;AACA,SAAKM,QAAL,CAAc;AAAEN,MAAAA,KAAF;AAASC,MAAAA,KAAK,EAAE;AAAhB,KAAd;AACD;;AAEDM,EAAAA,cAAc,CAACH,KAAD,EAAQ;AACpBI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWG,KAAvB;AACD;;AAEDV,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEQ,MAAAA,MAAF;AAAUE,MAAAA,KAAV;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKL,KAA7C;AACA,UAAM;AAAEa,MAAAA,SAAF;AAAaX,MAAAA;AAAb,QAAwB,KAAKH,KAAnC;AACA,UAAMe,cAAc,GAAI,SAAQ,CAACZ,MAAM,GAAGD,MAAH,GAAYA,MAAM,IAAIE,KAA7B,KAC9B,QAAS,IAAGD,MAAM,IAAI,CAACD,MAAX,IAAqB,QAAS,EAD5C;AAGA,wBACE;AAAK,MAAA,SAAS,EAAEa,cAAhB;AAAA,iBACGb,MAAM,IACLE,KADD,IAECU,SAFD,IAGCA,SAAS,CAACE,QAAV,CAAmBZ,KAAnB,CAHD,iBAG8B;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BU;AAA1B;AAAA;AAAA;AAAA;AAAA,cAJjC,eAKE;AACE,QAAA,EAAE,EAAE,CADN;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEV,KAHT;AAIE,QAAA,WAAW,EAAEE,KAJf;AAKE,QAAA,QAAQ,EAAE,KAAKC,WAAL,CAAiBU,IAAjB,CAAsB,IAAtB,CALZ;AAME,QAAA,UAAU,EAAE,KAAKN,cAAL,CAAoBM,IAApB,CAAyB,IAAzB,CANd;AAOE,QAAA,OAAO,EAAE,MAAM,CAACd,MAAD,IAAW,KAAKO,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAE;AAAV,SAAd,CAP5B;AAQE,QAAA,MAAM,EAAE,MAAM,CAACC,MAAD,IAAW,KAAKO,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAE;AAAV,SAAd;AAR3B;AAAA;AAAA;AAAA;AAAA,cALF,eAeE;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAEG,KAAK,IAAI,OAAvC;AAAA,kBACGA,KAAK,IAAIC;AADZ;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAjDuC;;AAoD1C,eAAeT,WAAf","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport {TransitionMotion, spring } from 'react-motion';\nimport \"../stylesheets/NumberInput.css\";\n\nclass NumberInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: (props.locked && props.active) || false,\n      // FIX THIS VALUE TO HAVE INPUT BE TRUE... RN \"\" is so 1 is \"\" then 12 is \"1\"\n      value: props.value || \"\",\n      error: props.error || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({ value, error: 0 });\n  }\n\n  handleKeyPress(event) {\n    console.log(this.state.value)\n  }\n\n  render() {\n    const { active, value, error, label } = this.state;\n    const { predicted, locked } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) &&\n      \"active\"} ${locked && !active && \"locked\"}`;\n\n    return (\n      <div className={fieldClassName}>\n        {active &&\n          value &&\n          predicted &&\n          predicted.includes(value) && <p className=\"predicted\">{predicted}</p>}\n        <input\n          id={0}\n          type=\"text\"\n          value={value}\n          placeholder={label}\n          onChange={this.changeValue.bind(this)}\n          onKeyPress={this.handleKeyPress.bind(this)}\n          onFocus={() => !locked && this.setState({ active: true })}\n          onBlur={() => !locked && this.setState({ active: false })}\n        />\n        <label htmlFor={0} className={error && \"error\"}>\n          {error || label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default NumberInput;\n"]},"metadata":{},"sourceType":"module"}